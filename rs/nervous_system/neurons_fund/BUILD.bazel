load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

BASE_DEPENDENCIES = [
    # Keep sorted.
    "@crate_index//:lazy_static",
    "@crate_index//:rust_decimal",
    "@crate_index//:serde",
    "@crate_index//:serde_json",
]

DEPENDENCIES = BASE_DEPENDENCIES + [
    "//rs/nervous_system/common",
]

DEPENDENCIES_WITH_TEST_FEATURES = BASE_DEPENDENCIES + [
    "//rs/nervous_system/common:common--test_feature",
]

MACRO_DEPENDENCIES = [
    # Keep sorted.
    "@crate_index//:rust_decimal_macros",
]

DEV_DEPENDENCIES = [
    # Keep sorted.
    "@crate_index//:assert_matches",
    "@crate_index//:proptest",
    "@crate_index//:serde_bytes",
]

ALIASES = {}

rust_library(
    name = "neurons_fund",
    srcs = glob(
        ["src/**"],
        exclude = ["src/**/*tests.rs"],
    ),
    aliases = ALIASES,
    crate_name = "ic_neurons_fund",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.0.1",
    deps = DEPENDENCIES,
)

rust_library(
    name = "neurons_fund--test_feature",
    srcs = glob(
        ["src/**"],
        exclude = ["src/**/*tests.rs"],
    ),
    aliases = ALIASES,
    crate_name = "ic_neurons_fund",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.0.1",
    deps = DEPENDENCIES_WITH_TEST_FEATURES,
)

rust_test(
    name = "neurons_fund_test",
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)
