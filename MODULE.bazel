# TODO: check lockfile on CI
module(
    name = "ic",
)

bazel_dep(name = "rules_python", version = "0.35.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.10",  # TODO: note about pip using different version
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "python_deps",
    python_version = "3.10",
    requirements_lock = "//:requirements.txt",
    #hub_name = # TODO
)
use_repo(pip, "python_deps")

bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "gazelle", version = "0.38.0")

# NOTE for closure

bazel_dep(name = "protobuf",
    repo_name="com_google_protobuf", # needed for rules_closure to find it
version = "28.2")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")

# TODO: figure out why reported as indirect deps
use_repo(
    go_deps,
    "com_github_fatih_color",
    "com_github_golang_protobuf",
    "com_github_google_go_cmp",
    "com_github_honeycombio_beeline_go",
    "com_github_schollz_closestmatch",
    "com_github_spf13_cobra",
    "com_github_stretchr_testify",
    "org_golang_google_genproto",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    # Exported by gazelle specifically for rules_go.
    "bazel_gazelle_go_repository_config",
)

# General Bazel helpers
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "aspect_bazel_lib", version = "2.9.0")

# Protobuf rules
bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "rules_java", version = "7.11.1") # NOTE: for closure

# Docker/OCI & archive rules with image definitions
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_oci", version = "2.0.0")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# file server used in tests
oci.pull(
    name = "static-file-server",
    # $ docker pull halverneus/static-file-server
    # $ docker tag halverneus/static-file-server dfinitydev/halverneus-static-file-server:latest
    # $ docker push dfinitydev/halverneus-static-file-server:latest
    #latest: digest: sha256:...
    image = "docker.io/dfinitydev/halverneus-static-file-server@sha256:80eb204716e0928e27e378ed817056c1167b2b1a878b1ac4ce496964dd9a3ccd",
    platforms = [
        "linux/amd64",
    ],
)
use_repo(oci, "static-file-server")
use_repo(oci, "static-file-server_linux_amd64")

# bitcoin container used in test
oci.pull(
    name = "bitcoind",
    image = "docker.io/kylemanna/bitcoind@sha256:17c7dd21690f3be34630db7389d2f0bff14649e27a964afef03806a6d631e0f1",
    platforms = [
        "linux/amd64",
    ],
)
use_repo(oci, "bitcoind")
use_repo(oci, "bitcoind_linux_amd64")

# Tracing image used in tests
# we can't use the official image: https://github.com/bazel-contrib/rules_oci/issues/695
#
# Instead we copy the official image to our repository:
# $ docker pull halverneus/static-file-server
# $ docker tag halverneus/static-file-server dfinitydev/halverneus-static-file-server:latest
# $ docker push dfinitydev/halverneus-static-file-server:latest
# > latest: digest: sha256:...
oci.pull(
    name = "jaeger",
    image = "docker.io/dfinitydev/jaegertracing-all-in-one@sha256:b85a6bbb949a62377010b8418d7a860c9d0ea7058d83e7cb5ade4fba046c4a76",
    platforms = [
        "linux/amd64",
    ],
)
use_repo(oci, "jaeger")
use_repo(oci, "jaeger_linux_amd64")

# Used by tests
oci.pull(
    name = "minica",
    image = "docker.io/ryantk/minica@sha256:c67e2c1885d438b5927176295d41aaab8a72dd9e1272ba85054bfc78191d05b0",
    platforms = ["linux/amd64"],
)
use_repo(oci, "minica")  # TODO: remove?
use_repo(oci, "minica_linux_amd64")

# used by rosetta image
oci.pull(
    name = "rust_base",
    image = "gcr.io/distroless/cc-debian11@sha256:8e94f031353596c3fc9db6a2499bcc82dacc40cb71e0703476f9fad41677efdf",
    platforms = ["linux/amd64"],
)
use_repo(oci, "rust_base")
use_repo(oci, "rust_base_linux_amd64")

# used in various places as base
oci.pull(
    name = "ubuntu_base",
    image = "docker.io/library/ubuntu@sha256:965fbcae990b0467ed5657caceaec165018ef44a4d2d46c7cdea80a9dff0d1ea",
    platforms = ["linux/amd64"],
)
use_repo(oci, "ubuntu_base")
use_repo(oci, "ubuntu_base_linux_amd64")

# used by boundary node tests
oci.pull(
    name = "coredns",
    image = "docker.io/coredns/coredns@sha256:be7652ce0b43b1339f3d14d9b14af9f588578011092c1f7893bd55432d83a378",
    platforms = ["linux/amd64"],
)
use_repo(oci, "coredns")
use_repo(oci, "coredns_linux_amd64")

# used by custom domains tests
oci.pull(
    name = "pebble",
    image = "docker.io/letsencrypt/pebble@sha256:fc5a537bf8fbc7cc63aa24ec3142283aa9b6ba54529f86eb8ff31fbde7c5b258",
    platforms = ["linux/amd64"],
)
use_repo(oci, "pebble")
use_repo(oci, "pebble_linux_amd64")
oci.pull(
    name = "python3",
    image = "docker.io/library/python@sha256:0a56f24afa1fc7f518aa690cb8c7be661225e40b157d9bb8c6ef402164d9faa7",
    platforms = ["linux/amd64"],
)
use_repo(oci, "python3")
use_repo(oci, "python3_linux_amd64")
oci.pull(
    name = "alpine_openssl",
    image = "docker.io/alpine/openssl@sha256:cf89651f07a33d2faf4499f72e6f8b0ee2542cd40735d51c7e75b8965c17af0e",
    platforms = ["linux/amd64"],
)
use_repo(oci, "alpine_openssl")
use_repo(oci, "alpine_openssl_linux_amd64")

kubeconfig_ext = use_extension("//rs/tests:kubeconfig_extension.bzl", "kubeconfig_extension")
use_repo(kubeconfig_ext, "kubeconfig")
