{
  "lockFileVersion": 3,
  "moduleFileHash": "fa3bef502912670bda18936c2b26b675cbee5985697a679f3eaad8f0b74902ff",
  "flags": {
    "cmdRegistries": [
      "https://bcr.bazel.build/"
    ],
    "cmdModuleOverrides": {},
    "allowedYankedVersions": [],
    "envVarAllowedYankedVersions": "",
    "ignoreDevDependency": false,
    "directDependenciesMode": "WARNING",
    "compatibilityMode": "ERROR"
  },
  "localOverrideHashes": {
    "bazel_tools": "922ea6752dc9105de5af957f7a99a6933c0a6a712d23df6aad16a9c399f7e787"
  },
  "moduleDepGraph": {
    "<root>": {
      "name": "ic",
      "version": "",
      "key": "<root>",
      "repoName": "ic",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 20,
            "column": 23
          },
          "imports": {},
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "python_version": "3.10"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 21,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:pip.bzl",
          "extensionName": "pip",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 23,
            "column": 20
          },
          "imports": {
            "python_deps": "python_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "python_deps",
                "python_version": "3.10",
                "requirements_lock": "//:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 24,
                "column": 10
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 47,
            "column": 24
          },
          "imports": {
            "com_github_fatih_color": "com_github_fatih_color",
            "com_github_golang_protobuf": "com_github_golang_protobuf",
            "com_github_google_go_cmp": "com_github_google_go_cmp",
            "com_github_honeycombio_beeline_go": "com_github_honeycombio_beeline_go",
            "com_github_schollz_closestmatch": "com_github_schollz_closestmatch",
            "com_github_spf13_cobra": "com_github_spf13_cobra",
            "com_github_stretchr_testify": "com_github_stretchr_testify",
            "org_golang_google_genproto": "org_golang_google_genproto",
            "org_golang_google_grpc": "org_golang_google_grpc",
            "org_golang_google_protobuf": "org_golang_google_protobuf"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 48,
                "column": 18
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/fatih/color",
                "sum": "h1:8LOYc1KYPPmyKMuN8QV2DNRWNbLo6LZ0iLs8+mlH53w=",
                "version": "v1.13.0"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 51,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/golang/protobuf",
                "sum": "h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=",
                "version": "v1.5.2"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 56,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/google/go-cmp",
                "sum": "h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=",
                "version": "v0.5.9"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 61,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/honeycombio/beeline-go",
                "sum": "h1:cyrfwgxM32DKzUhZFJ0KLbPkoyf5lHOyn+7GISwEVZQ=",
                "version": "v1.11.1"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 66,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/schollz/closestmatch",
                "sum": "h1:Uel2GXEpJqOWBrlyI+oY9LTiyyjYS17cCYRqP13/SHk=",
                "version": "v2.1.0+incompatible"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 71,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/spf13/cobra",
                "sum": "h1:o94oiPyS4KD1mPy2fmcYYHHfCxLqYjJOhGsCHFZtEzA=",
                "version": "v1.6.1"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 76,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/stretchr/testify",
                "sum": "h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=",
                "version": "v1.8.1"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 81,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "google.golang.org/genproto",
                "sum": "h1:wtujag7C+4D6KMoulW9YauvK2lgdvCMS260jsqqBXr0=",
                "version": "v0.0.0-20210602131652-f16073e35f0c"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 86,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "google.golang.org/grpc",
                "sum": "h1:WTLtQzmQori5FUH25Pq4WT22oCsv8USpQ+F6rqtsmxw=",
                "version": "v1.49.0"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 91,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "google.golang.org/protobuf",
                "sum": "h1:d0NfwRgPtno5B1Wa6L2DAG+KivqkdutMf1UhdNx175w=",
                "version": "v1.28.1"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 96,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_oci//oci:extensions.bzl",
          "extensionName": "oci",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 121,
            "column": 20
          },
          "imports": {
            "static-file-server": "static-file-server",
            "static-file-server_linux_amd64": "static-file-server_linux_amd64",
            "bitcoind": "bitcoind",
            "bitcoind_linux_amd64": "bitcoind_linux_amd64",
            "jaeger": "jaeger",
            "jaeger_linux_amd64": "jaeger_linux_amd64",
            "minica": "minica",
            "minica_linux_amd64": "minica_linux_amd64",
            "rust_base": "rust_base",
            "rust_base_linux_amd64": "rust_base_linux_amd64",
            "ubuntu_base": "ubuntu_base",
            "ubuntu_base_linux_amd64": "ubuntu_base_linux_amd64",
            "coredns": "coredns",
            "coredns_linux_amd64": "coredns_linux_amd64",
            "pebble": "pebble",
            "pebble_linux_amd64": "pebble_linux_amd64",
            "python3": "python3",
            "python3_linux_amd64": "python3_linux_amd64",
            "alpine_openssl": "alpine_openssl",
            "alpine_openssl_linux_amd64": "alpine_openssl_linux_amd64"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "static-file-server",
                "image": "docker.io/dfinitydev/halverneus-static-file-server@sha256:80eb204716e0928e27e378ed817056c1167b2b1a878b1ac4ce496964dd9a3ccd",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 124,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "bitcoind",
                "image": "docker.io/kylemanna/bitcoind@sha256:17c7dd21690f3be34630db7389d2f0bff14649e27a964afef03806a6d631e0f1",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 139,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "jaeger",
                "image": "docker.io/dfinitydev/jaegertracing-all-in-one@sha256:b85a6bbb949a62377010b8418d7a860c9d0ea7058d83e7cb5ade4fba046c4a76",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 157,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "minica",
                "image": "docker.io/ryantk/minica@sha256:c67e2c1885d438b5927176295d41aaab8a72dd9e1272ba85054bfc78191d05b0",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 168,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "rust_base",
                "image": "gcr.io/distroless/cc-debian11@sha256:8e94f031353596c3fc9db6a2499bcc82dacc40cb71e0703476f9fad41677efdf",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 177,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "ubuntu_base",
                "image": "docker.io/library/ubuntu@sha256:965fbcae990b0467ed5657caceaec165018ef44a4d2d46c7cdea80a9dff0d1ea",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 186,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "coredns",
                "image": "docker.io/coredns/coredns@sha256:be7652ce0b43b1339f3d14d9b14af9f588578011092c1f7893bd55432d83a378",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 195,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "pebble",
                "image": "docker.io/letsencrypt/pebble@sha256:fc5a537bf8fbc7cc63aa24ec3142283aa9b6ba54529f86eb8ff31fbde7c5b258",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 204,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "python3",
                "image": "docker.io/library/python@sha256:0a56f24afa1fc7f518aa690cb8c7be661225e40b157d9bb8c6ef402164d9faa7",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 211,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "alpine_openssl",
                "image": "docker.io/alpine/openssl@sha256:cf89651f07a33d2faf4499f72e6f8b0ee2542cd40735d51c7e75b8965c17af0e",
                "platforms": [
                  "linux/amd64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 218,
                "column": 9
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@ic//rs/tests:kubeconfig_extension.bzl",
          "extensionName": "kubeconfig_extension",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 228,
            "column": 31
          },
          "imports": {
            "kubeconfig": "kubeconfig"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "aspect_bazel_lib": "aspect_bazel_lib@2.9.0",
        "rules_python": "rules_python@0.35.0",
        "com_google_protobuf": "protobuf@28.2",
        "rules_java": "rules_java@7.11.1",
        "rules_go": "rules_go@0.50.1",
        "gazelle": "gazelle@0.38.0",
        "rules_pkg": "rules_pkg@1.0.1",
        "rules_oci": "rules_oci@2.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "bazel_skylib@1.7.1": {
      "name": "bazel_skylib",
      "version": "1.7.1",
      "key": "bazel_skylib@1.7.1",
      "repoName": "bazel_skylib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains/unittest:cmd_toolchain",
        "//toolchains/unittest:bash_toolchain"
      ],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_license": "rules_license@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "bazel_skylib~1.7.1",
          "urls": [
            "https://github.com/bazelbuild/bazel-skylib/releases/download/1.7.1/bazel-skylib-1.7.1.tar.gz"
          ],
          "integrity": "sha256-vCg8381SalLDIBJ5zaS8KYZS76iYsQtNsIN9xRZSdW8=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "aspect_bazel_lib@2.9.0": {
      "name": "aspect_bazel_lib",
      "version": "2.9.0",
      "key": "aspect_bazel_lib@2.9.0",
      "repoName": "aspect_bazel_lib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@copy_directory_toolchains//:all",
        "@copy_to_directory_toolchains//:all",
        "@jq_toolchains//:all",
        "@yq_toolchains//:all",
        "@coreutils_toolchains//:all",
        "@expand_template_toolchains//:all",
        "@bats_toolchains//:all",
        "@bsd_tar_toolchains//:all",
        "@zstd_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@aspect_bazel_lib//lib:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "aspect_bazel_lib@2.9.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
            "line": 17,
            "column": 37
          },
          "imports": {
            "bats_toolchains": "bats_toolchains",
            "bsd_tar_toolchains": "bsd_tar_toolchains",
            "copy_directory_toolchains": "copy_directory_toolchains",
            "copy_to_directory_toolchains": "copy_to_directory_toolchains",
            "coreutils_toolchains": "coreutils_toolchains",
            "expand_template_toolchains": "expand_template_toolchains",
            "jq": "jq",
            "jq_toolchains": "jq_toolchains",
            "yq": "yq",
            "yq_toolchains": "yq_toolchains",
            "zstd_toolchains": "zstd_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "copy_directory",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
                "line": 18,
                "column": 36
              }
            },
            {
              "tagName": "copy_to_directory",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
                "line": 19,
                "column": 39
              }
            },
            {
              "tagName": "jq",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
                "line": 20,
                "column": 24
              }
            },
            {
              "tagName": "yq",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
                "line": 21,
                "column": 24
              }
            },
            {
              "tagName": "coreutils",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
                "line": 22,
                "column": 31
              }
            },
            {
              "tagName": "tar",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
                "line": 23,
                "column": 25
              }
            },
            {
              "tagName": "zstd",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
                "line": 24,
                "column": 26
              }
            },
            {
              "tagName": "expand_template",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
                "line": 25,
                "column": 37
              }
            },
            {
              "tagName": "bats",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/MODULE.bazel",
                "line": 26,
                "column": 26
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "io_bazel_stardoc": "stardoc@0.6.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "aspect_bazel_lib~2.9.0",
          "urls": [
            "https://github.com/bazel-contrib/bazel-lib/releases/download/v2.9.0/bazel-lib-v2.9.0.tar.gz"
          ],
          "integrity": "sha256-2mfGp4XNwQ+vlgoixEUB/mvjV6br0r1hAVYPnCqeBrM=",
          "strip_prefix": "bazel-lib-2.9.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/patches/go_dev_dep.patch": "sha256-DTc/hk+etl4D50M0BLRik2vHbrgDb6rds+Dj4xphWb4=",
            "https://bcr.bazel.build/modules/aspect_bazel_lib/2.9.0/patches/module_dot_bazel_version.patch": "sha256-ckp6bX/bx664Iq8eaP0wg37uDQ32Q1ZaTJmZ4j1R6KU="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_python@0.35.0": {
      "name": "rules_python",
      "version": "0.35.0",
      "key": "rules_python@0.35.0",
      "repoName": "rules_python",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@pythons_hub//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_python//python/private:internal_deps.bzl",
          "extensionName": "internal_deps",
          "usingModule": "rules_python@0.35.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.35.0/MODULE.bazel",
            "line": 16,
            "column": 30
          },
          "imports": {
            "pypi__build": "pypi__build",
            "pypi__click": "pypi__click",
            "pypi__colorama": "pypi__colorama",
            "pypi__importlib_metadata": "pypi__importlib_metadata",
            "pypi__installer": "pypi__installer",
            "pypi__more_itertools": "pypi__more_itertools",
            "pypi__packaging": "pypi__packaging",
            "pypi__pep517": "pypi__pep517",
            "pypi__pip": "pypi__pip",
            "pypi__pip_tools": "pypi__pip_tools",
            "pypi__pyproject_hooks": "pypi__pyproject_hooks",
            "pypi__setuptools": "pypi__setuptools",
            "pypi__tomli": "pypi__tomli",
            "pypi__wheel": "pypi__wheel",
            "pypi__zipp": "pypi__zipp",
            "rules_python_internal": "rules_python_internal"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "rules_python@0.35.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.35.0/MODULE.bazel",
            "line": 39,
            "column": 23
          },
          "imports": {
            "python_3_11": "python_3_11",
            "python_versions": "python_versions",
            "pythons_hub": "pythons_hub"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": true,
                "python_version": "3.11"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_python/0.35.0/MODULE.bazel",
                "line": 45,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/private/pypi:pip.bzl",
          "extensionName": "pip_internal",
          "usingModule": "rules_python@0.35.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.35.0/MODULE.bazel",
            "line": 57,
            "column": 20
          },
          "imports": {
            "rules_python_publish_deps": "rules_python_publish_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "rules_python_publish_deps",
                "python_version": "3.11",
                "requirements_by_platform": {
                  "//tools/publish:requirements.txt": "linux_*",
                  "//tools/publish:requirements_darwin.txt": "osx_*",
                  "//tools/publish:requirements_windows.txt": "windows_*"
                }
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_python/0.35.0/MODULE.bazel",
                "line": 58,
                "column": 10
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_features": "bazel_features@1.11.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_cc": "rules_cc@0.0.9",
        "platforms": "platforms@0.0.10",
        "rules_proto": "rules_proto@6.0.0",
        "com_google_protobuf": "protobuf@28.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_python~0.35.0",
          "urls": [
            "https://github.com/bazelbuild/rules_python/releases/download/0.35.0/rules_python-0.35.0.tar.gz"
          ],
          "integrity": "sha256-vgS2Nce+RgS+HvIFQumHCvPEl3jOhB7i2S/LQvnZUWo=",
          "strip_prefix": "rules_python-0.35.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_python/0.35.0/patches/module_dot_bazel_version.patch": "sha256-CXFJYTzyfhPzSinBGZ3QrfymhcaEMqaJDOfGmlgU97c="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "protobuf@28.2": {
      "name": "protobuf",
      "version": "28.2",
      "key": "protobuf@28.2",
      "repoName": "com_google_protobuf",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@rust_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "protobuf@28.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
            "line": 38,
            "column": 23
          },
          "imports": {
            "system_python": "python_3_12"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.8"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 40,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.9"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 40,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.10"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 40,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.11"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 40,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": true,
                "python_version": "3.12"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 40,
                "column": 21
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:pip.bzl",
          "extensionName": "pip",
          "usingModule": "protobuf@28.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
            "line": 47,
            "column": 20
          },
          "imports": {
            "pip_deps": "pip_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "pip_deps",
                "python_version": "3.8",
                "requirements_lock": "//python:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 49,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "pip_deps",
                "python_version": "3.9",
                "requirements_lock": "//python:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 49,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "pip_deps",
                "python_version": "3.10",
                "requirements_lock": "//python:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 49,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "pip_deps",
                "python_version": "3.11",
                "requirements_lock": "//python:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 49,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "pip_deps",
                "python_version": "3.12",
                "requirements_lock": "//python:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 49,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_rust//rust:extensions.bzl",
          "extensionName": "rust",
          "usingModule": "protobuf@28.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
            "line": 58,
            "column": 21
          },
          "imports": {
            "rust_toolchains": "rust_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "edition": "2021"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 59,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_rust//crate_universe:extension.bzl",
          "extensionName": "crate",
          "usingModule": "protobuf@28.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
            "line": 62,
            "column": 22
          },
          "imports": {
            "crate_index": "crates"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "spec",
              "attributeValues": {
                "package": "googletest",
                "version": ">0.0.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 63,
                "column": 11
              }
            },
            {
              "tagName": "spec",
              "attributeValues": {
                "package": "paste",
                "version": ">=1"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 67,
                "column": 11
              }
            },
            {
              "tagName": "from_specs",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/28.2/MODULE.bazel",
                "line": 71,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "com_google_absl": "abseil-cpp@20240116.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "jsoncpp": "jsoncpp@1.9.5",
        "rules_cc": "rules_cc@0.0.9",
        "rules_fuzzing": "rules_fuzzing@0.5.2",
        "rules_java": "rules_java@7.11.1",
        "rules_jvm_external": "rules_jvm_external@5.2",
        "rules_pkg": "rules_pkg@1.0.1",
        "rules_python": "rules_python@0.35.0",
        "rules_rust": "rules_rust@0.45.1",
        "platforms": "platforms@0.0.10",
        "zlib": "zlib@1.3.1",
        "rules_proto": "rules_proto@6.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "protobuf~28.2",
          "urls": [
            "https://github.com/protocolbuffers/protobuf/releases/download/v28.2/protobuf-28.2.zip"
          ],
          "integrity": "sha256-4BBolY8Sl0eYin++Cd3nzGSXTjs1Mx7kHuKCnwlh1HI=",
          "strip_prefix": "protobuf-28.2",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_java@7.11.1": {
      "name": "rules_java",
      "version": "7.11.1",
      "key": "rules_java@7.11.1",
      "repoName": "rules_java",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains:all",
        "@local_jdk//:runtime_toolchain_definition",
        "@local_jdk//:bootstrap_runtime_toolchain_definition",
        "@remote_jdk8_linux_toolchain_config_repo//:all",
        "@remote_jdk8_linux_aarch64_toolchain_config_repo//:all",
        "@remote_jdk8_linux_s390x_toolchain_config_repo//:all",
        "@remote_jdk8_macos_toolchain_config_repo//:all",
        "@remote_jdk8_macos_aarch64_toolchain_config_repo//:all",
        "@remote_jdk8_windows_toolchain_config_repo//:all",
        "@remotejdk11_linux_toolchain_config_repo//:all",
        "@remotejdk11_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk11_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk11_macos_toolchain_config_repo//:all",
        "@remotejdk11_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_win_toolchain_config_repo//:all",
        "@remotejdk11_win_arm64_toolchain_config_repo//:all",
        "@remotejdk17_linux_toolchain_config_repo//:all",
        "@remotejdk17_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk17_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk17_macos_toolchain_config_repo//:all",
        "@remotejdk17_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_win_toolchain_config_repo//:all",
        "@remotejdk17_win_arm64_toolchain_config_repo//:all",
        "@remotejdk21_linux_toolchain_config_repo//:all",
        "@remotejdk21_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk21_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk21_macos_toolchain_config_repo//:all",
        "@remotejdk21_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_win_toolchain_config_repo//:all",
        "@remotejdk21_win_arm64_toolchain_config_repo//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "rules_java@7.11.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_java/7.11.1/MODULE.bazel",
            "line": 20,
            "column": 27
          },
          "imports": {
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64",
            "local_jdk": "local_jdk",
            "remote_jdk8_linux_toolchain_config_repo": "remote_jdk8_linux_toolchain_config_repo",
            "remote_jdk8_linux_aarch64_toolchain_config_repo": "remote_jdk8_linux_aarch64_toolchain_config_repo",
            "remote_jdk8_linux_s390x_toolchain_config_repo": "remote_jdk8_linux_s390x_toolchain_config_repo",
            "remote_jdk8_macos_toolchain_config_repo": "remote_jdk8_macos_toolchain_config_repo",
            "remote_jdk8_macos_aarch64_toolchain_config_repo": "remote_jdk8_macos_aarch64_toolchain_config_repo",
            "remote_jdk8_windows_toolchain_config_repo": "remote_jdk8_windows_toolchain_config_repo",
            "remotejdk11_linux_toolchain_config_repo": "remotejdk11_linux_toolchain_config_repo",
            "remotejdk11_linux_aarch64_toolchain_config_repo": "remotejdk11_linux_aarch64_toolchain_config_repo",
            "remotejdk11_linux_ppc64le_toolchain_config_repo": "remotejdk11_linux_ppc64le_toolchain_config_repo",
            "remotejdk11_linux_s390x_toolchain_config_repo": "remotejdk11_linux_s390x_toolchain_config_repo",
            "remotejdk11_macos_toolchain_config_repo": "remotejdk11_macos_toolchain_config_repo",
            "remotejdk11_macos_aarch64_toolchain_config_repo": "remotejdk11_macos_aarch64_toolchain_config_repo",
            "remotejdk11_win_toolchain_config_repo": "remotejdk11_win_toolchain_config_repo",
            "remotejdk11_win_arm64_toolchain_config_repo": "remotejdk11_win_arm64_toolchain_config_repo",
            "remotejdk17_linux_toolchain_config_repo": "remotejdk17_linux_toolchain_config_repo",
            "remotejdk17_linux_aarch64_toolchain_config_repo": "remotejdk17_linux_aarch64_toolchain_config_repo",
            "remotejdk17_linux_ppc64le_toolchain_config_repo": "remotejdk17_linux_ppc64le_toolchain_config_repo",
            "remotejdk17_linux_s390x_toolchain_config_repo": "remotejdk17_linux_s390x_toolchain_config_repo",
            "remotejdk17_macos_toolchain_config_repo": "remotejdk17_macos_toolchain_config_repo",
            "remotejdk17_macos_aarch64_toolchain_config_repo": "remotejdk17_macos_aarch64_toolchain_config_repo",
            "remotejdk17_win_toolchain_config_repo": "remotejdk17_win_toolchain_config_repo",
            "remotejdk17_win_arm64_toolchain_config_repo": "remotejdk17_win_arm64_toolchain_config_repo",
            "remotejdk21_linux_toolchain_config_repo": "remotejdk21_linux_toolchain_config_repo",
            "remotejdk21_linux_aarch64_toolchain_config_repo": "remotejdk21_linux_aarch64_toolchain_config_repo",
            "remotejdk21_linux_ppc64le_toolchain_config_repo": "remotejdk21_linux_ppc64le_toolchain_config_repo",
            "remotejdk21_linux_s390x_toolchain_config_repo": "remotejdk21_linux_s390x_toolchain_config_repo",
            "remotejdk21_macos_toolchain_config_repo": "remotejdk21_macos_toolchain_config_repo",
            "remotejdk21_macos_aarch64_toolchain_config_repo": "remotejdk21_macos_aarch64_toolchain_config_repo",
            "remotejdk21_win_toolchain_config_repo": "remotejdk21_win_toolchain_config_repo",
            "remotejdk21_win_arm64_toolchain_config_repo": "remotejdk21_win_arm64_toolchain_config_repo"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_features": "bazel_features@1.11.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_proto": "rules_proto@6.0.0",
        "rules_license": "rules_license@0.0.8",
        "com_google_absl": "abseil-cpp@20240116.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_java~7.11.1",
          "urls": [
            "https://github.com/bazelbuild/rules_java/releases/download/7.11.1/rules_java-7.11.1.tar.gz"
          ],
          "integrity": "sha256-bzzg6fupeahE+rotYEZ4Q/v1GR2Mph+j0uoXZVtWu4w=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_go@0.50.1": {
      "name": "rules_go",
      "version": "0.50.1",
      "key": "rules_go@0.50.1",
      "repoName": "io_bazel_rules_go",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@go_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_bazel_rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "rules_go@0.50.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_go/0.50.1/MODULE.bazel",
            "line": 16,
            "column": 23
          },
          "imports": {
            "go_toolchains": "go_toolchains",
            "io_bazel_rules_nogo": "io_bazel_rules_nogo"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "download",
              "attributeValues": {
                "name": "go_default_sdk",
                "version": "1.21.8"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_go/0.50.1/MODULE.bazel",
                "line": 17,
                "column": 16
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "rules_go@0.50.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_go/0.50.1/MODULE.bazel",
            "line": 31,
            "column": 24
          },
          "imports": {
            "com_github_gogo_protobuf": "com_github_gogo_protobuf",
            "com_github_golang_mock": "com_github_golang_mock",
            "com_github_golang_protobuf": "com_github_golang_protobuf",
            "org_golang_google_genproto": "org_golang_google_genproto",
            "org_golang_google_grpc": "org_golang_google_grpc",
            "org_golang_google_grpc_cmd_protoc_gen_go_grpc": "org_golang_google_grpc_cmd_protoc_gen_go_grpc",
            "org_golang_google_protobuf": "org_golang_google_protobuf",
            "org_golang_x_net": "org_golang_x_net",
            "org_golang_x_tools": "org_golang_x_tools",
            "bazel_gazelle_go_repository_config": "bazel_gazelle_go_repository_config"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_go/0.50.1/MODULE.bazel",
                "line": 32,
                "column": 18
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "io_bazel_rules_go_bazel_features": "bazel_features@1.11.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_proto": "rules_proto@6.0.0",
        "com_google_protobuf": "protobuf@28.2",
        "gazelle": "gazelle@0.38.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_go~0.50.1",
          "urls": [
            "https://github.com/bazelbuild/rules_go/releases/download/v0.50.1/rules_go-v0.50.1.zip"
          ],
          "integrity": "sha256-9KkxRRjKas+hbMSrQ7C4zh5OpkuBw42KN3KIPxUzRrg=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "gazelle@0.38.0": {
      "name": "gazelle",
      "version": "0.38.0",
      "key": "gazelle@0.38.0",
      "repoName": "bazel_gazelle",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_bazel_rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "gazelle@0.38.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.38.0/MODULE.bazel",
            "line": 13,
            "column": 23
          },
          "imports": {
            "go_host_compatible_sdk_label": "go_host_compatible_sdk_label"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_gazelle//internal/bzlmod:non_module_deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "gazelle@0.38.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.38.0/MODULE.bazel",
            "line": 21,
            "column": 32
          },
          "imports": {
            "bazel_gazelle_go_repository_cache": "bazel_gazelle_go_repository_cache",
            "bazel_gazelle_go_repository_tools": "bazel_gazelle_go_repository_tools",
            "bazel_gazelle_is_bazel_module": "bazel_gazelle_is_bazel_module"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "gazelle@0.38.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.38.0/MODULE.bazel",
            "line": 29,
            "column": 24
          },
          "imports": {
            "com_github_bazelbuild_buildtools": "com_github_bazelbuild_buildtools",
            "com_github_bmatcuk_doublestar_v4": "com_github_bmatcuk_doublestar_v4",
            "com_github_fsnotify_fsnotify": "com_github_fsnotify_fsnotify",
            "com_github_google_go_cmp": "com_github_google_go_cmp",
            "com_github_pmezard_go_difflib": "com_github_pmezard_go_difflib",
            "org_golang_x_mod": "org_golang_x_mod",
            "org_golang_x_sync": "org_golang_x_sync",
            "org_golang_x_tools": "org_golang_x_tools",
            "org_golang_x_tools_go_vcs": "org_golang_x_tools_go_vcs",
            "bazel_gazelle_go_repository_config": "bazel_gazelle_go_repository_config",
            "com_github_golang_protobuf": "com_github_golang_protobuf",
            "org_golang_google_protobuf": "org_golang_google_protobuf"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/gazelle/0.38.0/MODULE.bazel",
                "line": 30,
                "column": 18
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "golang.org/x/tools",
                "sum": "h1:k8NLag8AGHnn+PHbl7g43CtqZAwG60vZkLqgyZgIHgQ=",
                "version": "v0.18.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/gazelle/0.38.0/MODULE.bazel",
                "line": 34,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_features": "bazel_features@1.11.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "com_google_protobuf": "protobuf@28.2",
        "io_bazel_rules_go": "rules_go@0.50.1",
        "rules_proto": "rules_proto@6.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "gazelle~0.38.0",
          "urls": [
            "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.38.0/bazel-gazelle-v0.38.0.tar.gz"
          ],
          "integrity": "sha256-itd1UoJbB4oQrZYL7G73fS/47HD67y/QONtxP0EPXYc=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_pkg@1.0.1": {
      "name": "rules_pkg",
      "version": "1.0.1",
      "key": "rules_pkg@1.0.1",
      "repoName": "rules_pkg",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_license": "rules_license@0.0.8",
        "rules_python": "rules_python@0.35.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_pkg~1.0.1",
          "urls": [
            "https://github.com/bazelbuild/rules_pkg/releases/download/1.0.1/rules_pkg-1.0.1.tar.gz"
          ],
          "integrity": "sha256-0gyVGWDtd8t7NBwqWUiFNOSU1a0dMMSBjHNtV3cqn+8=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_oci@2.0.0": {
      "name": "rules_oci",
      "version": "2.0.0",
      "key": "rules_oci@2.0.0",
      "repoName": "rules_oci",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@oci_crane_toolchains//:all",
        "@oci_regctl_toolchains//:all",
        "@zstd_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_oci//oci:extensions.bzl",
          "extensionName": "oci",
          "usingModule": "rules_oci@2.0.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_oci/2.0.0/MODULE.bazel",
            "line": 14,
            "column": 20
          },
          "imports": {
            "oci_crane_toolchains": "oci_crane_toolchains",
            "oci_regctl_toolchains": "oci_regctl_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchains",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_oci/2.0.0/MODULE.bazel",
                "line": 15,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@aspect_bazel_lib//lib:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "rules_oci@2.0.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_oci/2.0.0/MODULE.bazel",
            "line": 21,
            "column": 21
          },
          "imports": {
            "zstd_toolchains": "zstd_toolchains",
            "bsd_tar_toolchains": "bsd_tar_toolchains",
            "jq_toolchains": "jq_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "zstd",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_oci/2.0.0/MODULE.bazel",
                "line": 22,
                "column": 10
              }
            },
            {
              "tagName": "jq",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_oci/2.0.0/MODULE.bazel",
                "line": 28,
                "column": 13
              }
            },
            {
              "tagName": "tar",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_oci/2.0.0/MODULE.bazel",
                "line": 29,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "aspect_bazel_lib": "aspect_bazel_lib@2.9.0",
        "bazel_features": "bazel_features@1.11.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_oci~2.0.0",
          "urls": [
            "https://github.com/bazel-contrib/rules_oci/releases/download/v2.0.0/rules_oci-v2.0.0.tar.gz"
          ],
          "integrity": "sha256-0AfmyW62LIg5e2jzKeTKVuDP4xIEosVLDLF4Gfifg8g=",
          "strip_prefix": "rules_oci-2.0.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_oci/2.0.0/patches/module_dot_bazel_version.patch": "sha256-FHTsC5RIfqCZXYvI6F26Q2Aw2efdshFuGU08//h+orA="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "bazel_tools@_": {
      "name": "bazel_tools",
      "version": "",
      "key": "bazel_tools@_",
      "repoName": "bazel_tools",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all",
        "@local_config_sh//:local_sh_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 17,
            "column": 29
          },
          "imports": {
            "local_config_cc": "local_config_cc",
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/osx:xcode_configure.bzl",
          "extensionName": "xcode_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 21,
            "column": 32
          },
          "imports": {
            "local_config_xcode": "local_config_xcode"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 24,
            "column": 32
          },
          "imports": {
            "local_jdk": "local_jdk",
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/sh:sh_configure.bzl",
          "extensionName": "sh_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 35,
            "column": 39
          },
          "imports": {
            "local_config_sh": "local_config_sh"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/test:extensions.bzl",
          "extensionName": "remote_coverage_tools_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 39,
            "column": 48
          },
          "imports": {
            "remote_coverage_tools": "remote_coverage_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/android:android_extensions.bzl",
          "extensionName": "remote_android_tools_extensions",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 42,
            "column": 42
          },
          "imports": {
            "android_gmaven_r8": "android_gmaven_r8",
            "android_tools": "android_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "rules_java": "rules_java@7.11.1",
        "rules_license": "rules_license@0.0.8",
        "rules_proto": "rules_proto@6.0.0",
        "rules_python": "rules_python@0.35.0",
        "platforms": "platforms@0.0.10",
        "com_google_protobuf": "protobuf@28.2",
        "zlib": "zlib@1.3.1",
        "build_bazel_apple_support": "apple_support@1.13.0",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "local_config_platform@_": {
      "name": "local_config_platform",
      "version": "",
      "key": "local_config_platform@_",
      "repoName": "local_config_platform",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_"
      }
    },
    "platforms@0.0.10": {
      "name": "platforms",
      "version": "0.0.10",
      "key": "platforms@0.0.10",
      "repoName": "platforms",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@platforms//host:extension.bzl",
          "extensionName": "host_platform",
          "usingModule": "platforms@0.0.10",
          "location": {
            "file": "https://bcr.bazel.build/modules/platforms/0.0.10/MODULE.bazel",
            "line": 9,
            "column": 30
          },
          "imports": {
            "host_platform": "host_platform"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "rules_license": "rules_license@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "platforms",
          "urls": [
            "https://github.com/bazelbuild/platforms/releases/download/0.0.10/platforms-0.0.10.tar.gz"
          ],
          "integrity": "sha256-IY7+juc20mo1cmY7N0olPAErcW2K8MB+hC6C8jigp+4=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_license@0.0.8": {
      "name": "rules_license",
      "version": "0.0.8",
      "key": "rules_license@0.0.8",
      "repoName": "rules_license",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_license~0.0.8",
          "urls": [
            "https://github.com/bazelbuild/rules_license/releases/download/0.0.8/rules_license-0.0.8.tar.gz"
          ],
          "integrity": "sha256-JBsG8wl/0Yb/RogyFQ1swUIkfcQqMqrvtW0AmYlf0ik=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "stardoc@0.6.2": {
      "name": "stardoc",
      "version": "0.6.2",
      "key": "stardoc@0.6.2",
      "repoName": "stardoc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_jvm_external//:extensions.bzl",
          "extensionName": "maven",
          "usingModule": "stardoc@0.6.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/stardoc/0.6.2/MODULE.bazel",
            "line": 22,
            "column": 22
          },
          "imports": {
            "stardoc_maven": "stardoc_maven"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "stardoc_maven",
                "artifacts": [
                  "com.beust:jcommander:1.82",
                  "com.google.escapevelocity:escapevelocity:1.1",
                  "com.google.guava:guava:31.1-jre",
                  "com.google.truth:truth:1.1.3",
                  "junit:junit:4.13.2"
                ],
                "fail_if_repin_required": true,
                "lock_file": "//:maven_install.json",
                "repositories": [
                  "https://repo1.maven.org/maven2"
                ],
                "strict_visibility": true
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/stardoc/0.6.2/MODULE.bazel",
                "line": 23,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_java": "rules_java@7.11.1",
        "rules_jvm_external": "rules_jvm_external@5.2",
        "rules_license": "rules_license@0.0.8",
        "com_google_protobuf": "protobuf@28.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "stardoc~0.6.2",
          "urls": [
            "https://github.com/bazelbuild/stardoc/releases/download/0.6.2/stardoc-0.6.2.tar.gz"
          ],
          "integrity": "sha256-Yr0uYCFrem/sOseTQaogHglWR358j2zMKG8nmtHZZDI=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "bazel_features@1.11.0": {
      "name": "bazel_features",
      "version": "1.11.0",
      "key": "bazel_features@1.11.0",
      "repoName": "bazel_features",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_features//private:extensions.bzl",
          "extensionName": "version_extension",
          "usingModule": "bazel_features@1.11.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/bazel_features/1.11.0/MODULE.bazel",
            "line": 15,
            "column": 24
          },
          "imports": {
            "bazel_features_globals": "bazel_features_globals",
            "bazel_features_version": "bazel_features_version"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "bazel_features~1.11.0",
          "urls": [
            "https://github.com/bazel-contrib/bazel_features/releases/download/v1.11.0/bazel_features-v1.11.0.tar.gz"
          ],
          "integrity": "sha256-LNnlfUw4Z10yFzHWXBUljzpmQ4rVMa4Jy4uxQhfchXI=",
          "strip_prefix": "bazel_features-1.11.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/bazel_features/1.11.0/patches/module_dot_bazel_version.patch": "sha256-SmJxgdBt6h3FejXQprwnDFpgAouqa1nThB8hStRLI7o="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_cc@0.0.9": {
      "name": "rules_cc",
      "version": "0.0.9",
      "key": "rules_cc@0.0.9",
      "repoName": "rules_cc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "rules_cc@0.0.9",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel",
            "line": 9,
            "column": 29
          },
          "imports": {
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_cc~0.0.9",
          "urls": [
            "https://github.com/bazelbuild/rules_cc/releases/download/0.0.9/rules_cc-0.0.9.tar.gz"
          ],
          "integrity": "sha256-IDeHW5pEVtzkp50RKorohbvEqtlo5lh9ym5k86CQDN8=",
          "strip_prefix": "rules_cc-0.0.9",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_cc/0.0.9/patches/module_dot_bazel_version.patch": "sha256-mM+qzOI0SgAdaJBlWOSMwMPKpaA9b7R37Hj/tp5bb4g="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_proto@6.0.0": {
      "name": "rules_proto",
      "version": "6.0.0",
      "key": "rules_proto@6.0.0",
      "repoName": "rules_proto",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_license": "rules_license@0.0.8",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "bazel_features": "bazel_features@1.11.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_proto~6.0.0",
          "urls": [
            "https://github.com/bazelbuild/rules_proto/releases/download/6.0.0/rules_proto-6.0.0.tar.gz"
          ],
          "integrity": "sha256-MD6G5yKlIPbzJqULQc/Ba5j+bRlVzkZkKlt6Z8EcD10=",
          "strip_prefix": "rules_proto-6.0.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_proto/6.0.0/patches/module_dot_bazel_version.patch": "sha256-fjQjxMdkMeumhvx9JdFSYeHH+Ex4TaTXNFMi554NF8E="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "abseil-cpp@20240116.1": {
      "name": "abseil-cpp",
      "version": "20240116.1",
      "key": "abseil-cpp@20240116.1",
      "repoName": "abseil-cpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "com_google_googletest": "googletest@1.14.0.bcr.1",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "abseil-cpp~20240116.1",
          "urls": [
            "https://github.com/abseil/abseil-cpp/releases/download/20240116.1/abseil-cpp-20240116.1.tar.gz"
          ],
          "integrity": "sha256-PHQyBN94NmrS6vI21mMdg/a8ko0XBd0AALhy5Ttz3Go=",
          "strip_prefix": "abseil-cpp-20240116.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/abseil-cpp/20240116.1/patches/module_dot_bazel.patch": "sha256-H6J0U5xTQRVVGFkTsBioOCeWetuCfpavigN8YvpQkIQ="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "jsoncpp@1.9.5": {
      "name": "jsoncpp",
      "version": "1.9.5",
      "key": "jsoncpp@1.9.5",
      "repoName": "jsoncpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "jsoncpp~1.9.5",
          "urls": [
            "https://github.com/open-source-parsers/jsoncpp/archive/refs/tags/1.9.5.tar.gz"
          ],
          "integrity": "sha256-9AmFblkgwY0ML7hSduJO5gfSoJtefV8KNxNokDwnXaI=",
          "strip_prefix": "jsoncpp-1.9.5",
          "remote_patches": {
            "https://bcr.bazel.build/modules/jsoncpp/1.9.5/patches/build_dot_bazel.patch": "sha256-Vj8diXSWps8I8h5cdEqBDYmKBA2ulvWxMZBEQlIgcpU=",
            "https://bcr.bazel.build/modules/jsoncpp/1.9.5/patches/module_dot_bazel.patch": "sha256-7RC7fS8N11vcyeDEaUZ05yBqr0YY7OzuzqaWz5W2XDo="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_fuzzing@0.5.2": {
      "name": "rules_fuzzing",
      "version": "0.5.2",
      "key": "rules_fuzzing@0.5.2",
      "repoName": "rules_fuzzing",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_fuzzing//fuzzing/private:extensions.bzl",
          "extensionName": "non_module_dependencies",
          "usingModule": "rules_fuzzing@0.5.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
            "line": 30,
            "column": 40
          },
          "imports": {
            "honggfuzz": "honggfuzz",
            "rules_fuzzing_jazzer": "rules_fuzzing_jazzer",
            "rules_fuzzing_jazzer_api": "rules_fuzzing_jazzer_api",
            "rules_fuzzing_oss_fuzz": "rules_fuzzing_oss_fuzz"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "rules_fuzzing@0.5.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
            "line": 47,
            "column": 23
          },
          "imports": {},
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "ignore_root_user_error": true,
                "is_default": false,
                "python_version": "3.8"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 50,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "ignore_root_user_error": true,
                "is_default": false,
                "python_version": "3.9"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 50,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "ignore_root_user_error": true,
                "is_default": false,
                "python_version": "3.10"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 50,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "ignore_root_user_error": true,
                "is_default": false,
                "python_version": "3.11"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 50,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "ignore_root_user_error": true,
                "is_default": true,
                "python_version": "3.12"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 50,
                "column": 21
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:pip.bzl",
          "extensionName": "pip",
          "usingModule": "rules_fuzzing@0.5.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
            "line": 59,
            "column": 20
          },
          "imports": {
            "fuzzing_py_deps": "rules_fuzzing_py_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "parse",
              "attributeValues": {
                "extra_pip_args": [
                  "--require-hashes"
                ],
                "hub_name": "rules_fuzzing_py_deps",
                "python_version": "3.8",
                "requirements_lock": "//fuzzing:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 62,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "extra_pip_args": [
                  "--require-hashes"
                ],
                "hub_name": "rules_fuzzing_py_deps",
                "python_version": "3.9",
                "requirements_lock": "//fuzzing:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 62,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "extra_pip_args": [
                  "--require-hashes"
                ],
                "hub_name": "rules_fuzzing_py_deps",
                "python_version": "3.10",
                "requirements_lock": "//fuzzing:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 62,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "extra_pip_args": [
                  "--require-hashes"
                ],
                "hub_name": "rules_fuzzing_py_deps",
                "python_version": "3.11",
                "requirements_lock": "//fuzzing:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 62,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "extra_pip_args": [
                  "--require-hashes"
                ],
                "hub_name": "rules_fuzzing_py_deps",
                "python_version": "3.12",
                "requirements_lock": "//fuzzing:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
                "line": 62,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "rules_fuzzing@0.5.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/MODULE.bazel",
            "line": 73,
            "column": 32
          },
          "imports": {
            "local_jdk": "local_jdk"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "com_google_absl": "abseil-cpp@20240116.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_python": "rules_python@0.35.0",
        "rules_java": "rules_java@7.11.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_fuzzing~0.5.2",
          "urls": [
            "https://github.com/bazelbuild/rules_fuzzing/releases/download/v0.5.2/rules_fuzzing-0.5.2.zip"
          ],
          "integrity": "sha256-5rwhm/rJ4fg7Mn3QkPcoqflz7pm5tdjloYSicy7whiM=",
          "strip_prefix": "rules_fuzzing-0.5.2",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_fuzzing/0.5.2/patches/module_dot_bazel.patch": "sha256-+S/1nXWYEzeyvZeC9Zpgmt6bmmStrSBG99b33+dTmXc="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_jvm_external@5.2": {
      "name": "rules_jvm_external",
      "version": "5.2",
      "key": "rules_jvm_external@5.2",
      "repoName": "rules_jvm_external",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_jvm_external//:non-module-deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "rules_jvm_external@5.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/5.2/MODULE.bazel",
            "line": 9,
            "column": 32
          },
          "imports": {
            "io_bazel_rules_kotlin": "io_bazel_rules_kotlin"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": ":extensions.bzl",
          "extensionName": "maven",
          "usingModule": "rules_jvm_external@5.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/5.2/MODULE.bazel",
            "line": 15,
            "column": 22
          },
          "imports": {
            "rules_jvm_external_deps": "rules_jvm_external_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "rules_jvm_external_deps",
                "artifacts": [
                  "com.google.auth:google-auth-library-credentials:0.22.0",
                  "com.google.auth:google-auth-library-oauth2-http:0.22.0",
                  "com.google.cloud:google-cloud-core:1.93.10",
                  "com.google.cloud:google-cloud-storage:1.113.4",
                  "com.google.code.gson:gson:2.9.0",
                  "com.google.googlejavaformat:google-java-format:1.15.0",
                  "com.google.guava:guava:31.1-jre",
                  "org.apache.maven:maven-artifact:3.8.6",
                  "software.amazon.awssdk:s3:2.17.183"
                ],
                "lock_file": "@rules_jvm_external//:rules_jvm_external_deps_install.json"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/5.2/MODULE.bazel",
                "line": 16,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "io_bazel_stardoc": "stardoc@0.6.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_jvm_external~5.2",
          "urls": [
            "https://github.com/bazelbuild/rules_jvm_external/releases/download/5.2/rules_jvm_external-5.2.tar.gz"
          ],
          "integrity": "sha256-+G/UKoCeGHHKCqvonbDUQEUSGcPORsWNokDH3NwAEl8=",
          "strip_prefix": "rules_jvm_external-5.2",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_rust@0.45.1": {
      "name": "rules_rust",
      "version": "0.45.1",
      "key": "rules_rust@0.45.1",
      "repoName": "rules_rust",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@rust_toolchains//:all",
        "//proto/protobuf:default-proto-toolchain",
        "//proto/prost:default_prost_toolchain",
        "//bindgen:default_bindgen_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_rust//rust/private:extensions.bzl",
          "extensionName": "i",
          "usingModule": "rules_rust@0.45.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_rust/0.45.1/MODULE.bazel",
            "line": 58,
            "column": 30
          },
          "imports": {
            "bazelci_rules": "bazelci_rules",
            "cargo_bazel.buildifier-darwin-amd64": "cargo_bazel.buildifier-darwin-amd64",
            "cargo_bazel.buildifier-darwin-arm64": "cargo_bazel.buildifier-darwin-arm64",
            "cargo_bazel.buildifier-linux-amd64": "cargo_bazel.buildifier-linux-amd64",
            "cargo_bazel.buildifier-linux-arm64": "cargo_bazel.buildifier-linux-arm64",
            "cargo_bazel.buildifier-windows-amd64.exe": "cargo_bazel.buildifier-windows-amd64.exe",
            "com_google_googleapis": "com_google_googleapis",
            "cui": "cui",
            "cui__anyhow-1.0.75": "cui__anyhow-1.0.75",
            "cui__camino-1.1.6": "cui__camino-1.1.6",
            "cui__cargo-lock-9.0.0": "cui__cargo-lock-9.0.0",
            "cui__cargo-platform-0.1.4": "cui__cargo-platform-0.1.4",
            "cui__cargo_metadata-0.18.1": "cui__cargo_metadata-0.18.1",
            "cui__cargo_toml-0.19.2": "cui__cargo_toml-0.19.2",
            "cui__cfg-expr-0.15.5": "cui__cfg-expr-0.15.5",
            "cui__clap-4.3.11": "cui__clap-4.3.11",
            "cui__crates-index-2.2.0": "cui__crates-index-2.2.0",
            "cui__hex-0.4.3": "cui__hex-0.4.3",
            "cui__indoc-2.0.4": "cui__indoc-2.0.4",
            "cui__itertools-0.12.0": "cui__itertools-0.12.0",
            "cui__maplit-1.0.2": "cui__maplit-1.0.2",
            "cui__normpath-1.1.1": "cui__normpath-1.1.1",
            "cui__pathdiff-0.2.1": "cui__pathdiff-0.2.1",
            "cui__regex-1.10.2": "cui__regex-1.10.2",
            "cui__semver-1.0.20": "cui__semver-1.0.20",
            "cui__serde-1.0.190": "cui__serde-1.0.190",
            "cui__serde_json-1.0.108": "cui__serde_json-1.0.108",
            "cui__serde_starlark-0.1.14": "cui__serde_starlark-0.1.14",
            "cui__sha2-0.10.8": "cui__sha2-0.10.8",
            "cui__spdx-0.10.3": "cui__spdx-0.10.3",
            "cui__spectral-0.6.0": "cui__spectral-0.6.0",
            "cui__tempfile-3.8.1": "cui__tempfile-3.8.1",
            "cui__tera-1.19.1": "cui__tera-1.19.1",
            "cui__textwrap-0.16.0": "cui__textwrap-0.16.0",
            "cui__toml-0.8.10": "cui__toml-0.8.10",
            "cui__tracing-0.1.40": "cui__tracing-0.1.40",
            "cui__tracing-subscriber-0.3.17": "cui__tracing-subscriber-0.3.17",
            "generated_inputs_in_external_repo": "generated_inputs_in_external_repo",
            "libc": "libc",
            "llvm-raw": "llvm-raw",
            "rrra__anyhow-1.0.71": "rrra__anyhow-1.0.71",
            "rrra__clap-4.3.11": "rrra__clap-4.3.11",
            "rrra__env_logger-0.10.0": "rrra__env_logger-0.10.0",
            "rrra__itertools-0.11.0": "rrra__itertools-0.11.0",
            "rrra__log-0.4.19": "rrra__log-0.4.19",
            "rrra__serde-1.0.171": "rrra__serde-1.0.171",
            "rrra__serde_json-1.0.102": "rrra__serde_json-1.0.102",
            "rules_rust_bindgen__bindgen-0.69.1": "rules_rust_bindgen__bindgen-0.69.1",
            "rules_rust_bindgen__bindgen-cli-0.69.1": "rules_rust_bindgen__bindgen-cli-0.69.1",
            "rules_rust_bindgen__clang-sys-1.6.1": "rules_rust_bindgen__clang-sys-1.6.1",
            "rules_rust_bindgen__clap-4.3.3": "rules_rust_bindgen__clap-4.3.3",
            "rules_rust_bindgen__clap_complete-4.3.1": "rules_rust_bindgen__clap_complete-4.3.1",
            "rules_rust_bindgen__env_logger-0.10.0": "rules_rust_bindgen__env_logger-0.10.0",
            "rules_rust_prost": "rules_rust_prost",
            "rules_rust_prost__h2-0.3.19": "rules_rust_prost__h2-0.3.19",
            "rules_rust_prost__heck": "rules_rust_prost__heck",
            "rules_rust_prost__prost-0.11.9": "rules_rust_prost__prost-0.11.9",
            "rules_rust_prost__prost-types-0.11.9": "rules_rust_prost__prost-types-0.11.9",
            "rules_rust_prost__protoc-gen-prost-0.2.2": "rules_rust_prost__protoc-gen-prost-0.2.2",
            "rules_rust_prost__protoc-gen-tonic-0.2.2": "rules_rust_prost__protoc-gen-tonic-0.2.2",
            "rules_rust_prost__tokio-1.28.2": "rules_rust_prost__tokio-1.28.2",
            "rules_rust_prost__tokio-stream-0.1.14": "rules_rust_prost__tokio-stream-0.1.14",
            "rules_rust_prost__tonic-0.9.2": "rules_rust_prost__tonic-0.9.2",
            "rules_rust_proto__grpc-0.6.2": "rules_rust_proto__grpc-0.6.2",
            "rules_rust_proto__grpc-compiler-0.6.2": "rules_rust_proto__grpc-compiler-0.6.2",
            "rules_rust_proto__log-0.4.17": "rules_rust_proto__log-0.4.17",
            "rules_rust_proto__protobuf-2.8.2": "rules_rust_proto__protobuf-2.8.2",
            "rules_rust_proto__protobuf-codegen-2.8.2": "rules_rust_proto__protobuf-codegen-2.8.2",
            "rules_rust_proto__tls-api-0.1.22": "rules_rust_proto__tls-api-0.1.22",
            "rules_rust_proto__tls-api-stub-0.1.22": "rules_rust_proto__tls-api-stub-0.1.22",
            "rules_rust_test_load_arbitrary_tool": "rules_rust_test_load_arbitrary_tool",
            "rules_rust_tinyjson": "rules_rust_tinyjson",
            "rules_rust_toolchain_test_target_json": "rules_rust_toolchain_test_target_json",
            "rules_rust_wasm_bindgen__anyhow-1.0.71": "rules_rust_wasm_bindgen__anyhow-1.0.71",
            "rules_rust_wasm_bindgen__assert_cmd-1.0.8": "rules_rust_wasm_bindgen__assert_cmd-1.0.8",
            "rules_rust_wasm_bindgen__diff-0.1.13": "rules_rust_wasm_bindgen__diff-0.1.13",
            "rules_rust_wasm_bindgen__docopt-1.1.1": "rules_rust_wasm_bindgen__docopt-1.1.1",
            "rules_rust_wasm_bindgen__env_logger-0.8.4": "rules_rust_wasm_bindgen__env_logger-0.8.4",
            "rules_rust_wasm_bindgen__log-0.4.19": "rules_rust_wasm_bindgen__log-0.4.19",
            "rules_rust_wasm_bindgen__predicates-1.0.8": "rules_rust_wasm_bindgen__predicates-1.0.8",
            "rules_rust_wasm_bindgen__rayon-1.7.0": "rules_rust_wasm_bindgen__rayon-1.7.0",
            "rules_rust_wasm_bindgen__rouille-3.6.2": "rules_rust_wasm_bindgen__rouille-3.6.2",
            "rules_rust_wasm_bindgen__serde-1.0.171": "rules_rust_wasm_bindgen__serde-1.0.171",
            "rules_rust_wasm_bindgen__serde_derive-1.0.171": "rules_rust_wasm_bindgen__serde_derive-1.0.171",
            "rules_rust_wasm_bindgen__serde_json-1.0.102": "rules_rust_wasm_bindgen__serde_json-1.0.102",
            "rules_rust_wasm_bindgen__tempfile-3.6.0": "rules_rust_wasm_bindgen__tempfile-3.6.0",
            "rules_rust_wasm_bindgen__ureq-2.8.0": "rules_rust_wasm_bindgen__ureq-2.8.0",
            "rules_rust_wasm_bindgen__walrus-0.20.3": "rules_rust_wasm_bindgen__walrus-0.20.3",
            "rules_rust_wasm_bindgen__wasm-bindgen-0.2.91": "rules_rust_wasm_bindgen__wasm-bindgen-0.2.91",
            "rules_rust_wasm_bindgen__wasm-bindgen-cli-support-0.2.91": "rules_rust_wasm_bindgen__wasm-bindgen-cli-support-0.2.91",
            "rules_rust_wasm_bindgen__wasm-bindgen-shared-0.2.91": "rules_rust_wasm_bindgen__wasm-bindgen-shared-0.2.91",
            "rules_rust_wasm_bindgen__wasmparser-0.102.0": "rules_rust_wasm_bindgen__wasmparser-0.102.0",
            "rules_rust_wasm_bindgen__wasmprinter-0.2.60": "rules_rust_wasm_bindgen__wasmprinter-0.2.60",
            "rules_rust_wasm_bindgen_cli": "rules_rust_wasm_bindgen_cli"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_rust//rust:extensions.bzl",
          "extensionName": "rust",
          "usingModule": "rules_rust@0.45.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_rust/0.45.1/MODULE.bazel",
            "line": 157,
            "column": 21
          },
          "imports": {
            "rust_toolchains": "rust_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "edition": "2021"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_rust/0.45.1/MODULE.bazel",
                "line": 158,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_rust//rust:extensions.bzl",
          "extensionName": "rust_host_tools",
          "usingModule": "rules_rust@0.45.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_rust/0.45.1/MODULE.bazel",
            "line": 177,
            "column": 32
          },
          "imports": {
            "rust_host_tools": "rust_host_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_rust//crate_universe/private/module_extensions:cargo_bazel_bootstrap.bzl",
          "extensionName": "cargo_bazel_bootstrap",
          "usingModule": "rules_rust@0.45.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_rust/0.45.1/MODULE.bazel",
            "line": 180,
            "column": 38
          },
          "imports": {
            "cargo_bazel_bootstrap": "cargo_bazel_bootstrap"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_features": "bazel_features@1.11.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "rules_license": "rules_license@0.0.8",
        "rules_proto": "rules_proto@6.0.0",
        "build_bazel_apple_support": "apple_support@1.13.0",
        "com_google_protobuf": "protobuf@28.2",
        "aspect_rules_js": "aspect_rules_js@1.39.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_rust~0.45.1",
          "urls": [
            "https://github.com/bazelbuild/rules_rust/releases/download/0.45.1/rules_rust-v0.45.1.tar.gz"
          ],
          "integrity": "sha256-+bWb47wg0VchIADaHt6L5Dma2Gn+Q589nz/MKcTi+lo=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "zlib@1.3.1": {
      "name": "zlib",
      "version": "1.3.1",
      "key": "zlib@1.3.1",
      "repoName": "zlib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "zlib~1.3.1",
          "urls": [
            "https://github.com/madler/zlib/releases/download/v1.3.1/zlib-1.3.1.tar.gz"
          ],
          "integrity": "sha256-mpOyt9/ax3zrpaVYpYDnRmfdb+3kWFuR7vtg8Dty3yM=",
          "strip_prefix": "zlib-1.3.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/zlib/1.3.1/patches/add_build_file.patch": "sha256-Ei+FYaaOo7A3jTKunMEodTI0Uw5NXQyZEcboMC8JskY=",
            "https://bcr.bazel.build/modules/zlib/1.3.1/patches/module_dot_bazel.patch": "sha256-IFCFES6KY2jaryT+Kq2NemDn7hgdZYH0kZC1esA4cyE="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "apple_support@1.13.0": {
      "name": "apple_support",
      "version": "1.13.0",
      "key": "apple_support@1.13.0",
      "repoName": "build_bazel_apple_support",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_apple_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@build_bazel_apple_support//crosstool:setup.bzl",
          "extensionName": "apple_cc_configure_extension",
          "usingModule": "apple_support@1.13.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/apple_support/1.13.0/MODULE.bazel",
            "line": 19,
            "column": 35
          },
          "imports": {
            "local_config_apple_cc": "local_config_apple_cc",
            "local_config_apple_cc_toolchains": "local_config_apple_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "apple_support~1.13.0",
          "urls": [
            "https://github.com/bazelbuild/apple_support/releases/download/1.13.0/apple_support.1.13.0.tar.gz"
          ],
          "integrity": "sha256-HEAx5ytFagSNgXf1mlWBgIwHWF+p4lXG9f77h1KvfkA=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/apple_support/1.13.0/patches/module_dot_bazel_version.patch": "sha256-OqLgfAMNy6ZUF/WaVkNXzB/KcCYLlHLspYNk67mcASA="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "googletest@1.14.0.bcr.1": {
      "name": "googletest",
      "version": "1.14.0.bcr.1",
      "key": "googletest@1.14.0.bcr.1",
      "repoName": "googletest",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "com_google_absl": "abseil-cpp@20240116.1",
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "com_googlesource_code_re2": "re2@2023-09-01",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "googletest~1.14.0.bcr.1",
          "urls": [
            "https://github.com/google/googletest/archive/refs/tags/v1.14.0.tar.gz"
          ],
          "integrity": "sha256-itWYxzrXluDYKAsILOvYKmMNc+c808cAV5OKZQG7pdc=",
          "strip_prefix": "googletest-1.14.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/googletest/1.14.0.bcr.1/patches/module_dot_bazel.patch": "sha256-jijctisPYOzP4X4cl0K7neRh/kqJB+yODNHf8V8heCE="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "aspect_rules_js@1.39.0": {
      "name": "aspect_rules_js",
      "version": "1.39.0",
      "key": "aspect_rules_js@1.39.0",
      "repoName": "aspect_rules_js",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_nodejs//nodejs:extensions.bzl",
          "extensionName": "node",
          "usingModule": "aspect_rules_js@1.39.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/aspect_rules_js/1.39.0/MODULE.bazel",
            "line": 28,
            "column": 21
          },
          "imports": {
            "nodejs_darwin_amd64": "nodejs_darwin_amd64",
            "nodejs_darwin_arm64": "nodejs_darwin_arm64",
            "nodejs_linux_amd64": "nodejs_linux_amd64",
            "nodejs_linux_arm64": "nodejs_linux_arm64",
            "nodejs_linux_ppc64le": "nodejs_linux_ppc64le",
            "nodejs_linux_s390x": "nodejs_linux_s390x",
            "nodejs_windows_amd64": "nodejs_windows_amd64"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@aspect_rules_js//npm:extensions.bzl",
          "extensionName": "pnpm",
          "usingModule": "aspect_rules_js@1.39.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/aspect_rules_js/1.39.0/MODULE.bazel",
            "line": 37,
            "column": 21
          },
          "imports": {
            "pnpm": "pnpm",
            "pnpm__links": "pnpm__links"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "pnpm",
              "attributeValues": {
                "name": "pnpm",
                "pnpm_version": "8.6.7",
                "pnpm_version_integrity": "sha512-vRIWpD/L4phf9Bk2o/O2TDR8fFoJnpYrp2TKqTIZF/qZ2/rgL3qKXzHofHgbXsinwMoSEigz28sqk3pQ+yMEQQ=="
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_rules_js/1.39.0/MODULE.bazel",
                "line": 38,
                "column": 10
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@aspect_bazel_lib//lib:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "aspect_rules_js@1.39.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/aspect_rules_js/1.39.0/MODULE.bazel",
            "line": 45,
            "column": 37
          },
          "imports": {
            "coreutils_toolchains": "coreutils_toolchains",
            "yq_darwin_amd64": "yq_darwin_amd64",
            "yq_darwin_arm64": "yq_darwin_arm64",
            "yq_linux_amd64": "yq_linux_amd64",
            "yq_linux_arm64": "yq_linux_arm64",
            "yq_linux_ppc64le": "yq_linux_ppc64le",
            "yq_linux_s390x": "yq_linux_s390x",
            "yq_windows_amd64": "yq_windows_amd64"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "aspect_bazel_lib": "aspect_bazel_lib@2.9.0",
        "aspect_rules_lint": "aspect_rules_lint@0.12.0",
        "bazel_features": "bazel_features@1.11.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_nodejs": "rules_nodejs@5.8.2",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "aspect_rules_js~1.39.0",
          "urls": [
            "https://github.com/aspect-build/rules_js/releases/download/v1.39.0/rules_js-v1.39.0.tar.gz"
          ],
          "integrity": "sha256-YUgYjPpct2OXuHRbcdV8R6fBqOAP8vHi55VSBoRhl/E=",
          "strip_prefix": "rules_js-1.39.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/aspect_rules_js/1.39.0/patches/module_dot_bazel_version.patch": "sha256-G5M/8u+DRrFD+L7N7gVW16xT9ZYQaZIbQWVfEMrxbLk="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "re2@2023-09-01": {
      "name": "re2",
      "version": "2023-09-01",
      "key": "re2@2023-09-01",
      "repoName": "re2",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@pybind11_bazel//:python_configure.bzl",
          "extensionName": "extension",
          "usingModule": "re2@2023-09-01",
          "location": {
            "file": "https://bcr.bazel.build/modules/re2/2023-09-01/MODULE.bazel",
            "line": 22,
            "column": 33
          },
          "imports": {
            "local_config_python": "local_config_python",
            "pybind11": "pybind11"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "python_version": "3"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/re2/2023-09-01/MODULE.bazel",
                "line": 23,
                "column": 27
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "com_google_absl": "abseil-cpp@20240116.1",
        "rules_python": "rules_python@0.35.0",
        "pybind11_bazel": "pybind11_bazel@2.11.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "re2~2023-09-01",
          "urls": [
            "https://github.com/google/re2/releases/download/2023-09-01/re2-2023-09-01.zip"
          ],
          "integrity": "sha256-IkuDUdxGM7EBLb2EdWTgYKRr5goioUY9S1uZP9S/Wcw=",
          "strip_prefix": "re2-2023-09-01",
          "remote_patches": {
            "https://bcr.bazel.build/modules/re2/2023-09-01/patches/module_dot_bazel.patch": "sha256-MUQkRNgPJ0lbYqOXoBu2m2vLH7IuKEbK/VWTw7WWrnA="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "aspect_rules_lint@0.12.0": {
      "name": "aspect_rules_lint",
      "version": "0.12.0",
      "key": "aspect_rules_lint@0.12.0",
      "repoName": "aspect_rules_lint",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "aspect_bazel_lib": "aspect_bazel_lib@2.9.0",
        "aspect_rules_js": "aspect_rules_js@1.39.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_proto": "rules_proto@6.0.0",
        "rules_buf": "rules_buf@0.1.1",
        "com_google_protobuf": "protobuf@28.2",
        "io_bazel_rules_go": "rules_go@0.50.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "aspect_rules_lint~0.12.0",
          "urls": [
            "https://github.com/aspect-build/rules_lint/releases/download/v0.12.0/rules_lint-v0.12.0.tar.gz"
          ],
          "integrity": "sha256-QfrTY/EcyrRqJE+T+Myw9EK8I15gbS+th4AZh60HWbE=",
          "strip_prefix": "rules_lint-0.12.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/aspect_rules_lint/0.12.0/patches/module_dot_bazel_version.patch": "sha256-UalspyPiq7NghK8dC4FsJYIk0q6VE4tep18M0P6mwnw="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_nodejs@5.8.2": {
      "name": "rules_nodejs",
      "version": "5.8.2",
      "key": "rules_nodejs@5.8.2",
      "repoName": "rules_nodejs",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@nodejs_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_nodejs//nodejs:extensions.bzl",
          "extensionName": "node",
          "usingModule": "rules_nodejs@5.8.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_nodejs/5.8.2/MODULE.bazel",
            "line": 12,
            "column": 21
          },
          "imports": {
            "nodejs_toolchains": "nodejs_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "name": "nodejs"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_nodejs/5.8.2/MODULE.bazel",
                "line": 16,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_nodejs~5.8.2",
          "urls": [
            "https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.2/rules_nodejs-core-5.8.2.tar.gz"
          ],
          "integrity": "sha256-dko7N1e7jDxqArozRHMaPXHlWCIK3LDPfkPJu6LDe6g=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_nodejs/5.8.2/patches/module_dot_bazel.patch": "sha256-5QrAbAO9TVzmRytAov5d4xvl/U3aRQsUpeP/h5SFmu4="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "pybind11_bazel@2.11.1": {
      "name": "pybind11_bazel",
      "version": "2.11.1",
      "key": "pybind11_bazel@2.11.1",
      "repoName": "pybind11_bazel",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "pybind11_bazel~2.11.1",
          "urls": [
            "https://github.com/pybind/pybind11_bazel/releases/download/v2.11.1/pybind11_bazel-2.11.1.zip"
          ],
          "integrity": "sha256-LEZsmzzKeFK0fgeFADEomE/PDV1hoaLkxazu/ZNawiA=",
          "strip_prefix": "pybind11_bazel-2.11.1",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_buf@0.1.1": {
      "name": "rules_buf",
      "version": "0.1.1",
      "key": "rules_buf@0.1.1",
      "repoName": "rules_buf",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@rules_buf_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_buf//buf:extensions.bzl",
          "extensionName": "ext",
          "usingModule": "rules_buf@0.1.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_buf/0.1.1/MODULE.bazel",
            "line": 14,
            "column": 20
          },
          "imports": {
            "rules_buf_toolchains": "rules_buf_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.10",
        "com_google_protobuf": "protobuf@28.2",
        "rules_proto": "rules_proto@6.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_buf~0.1.1",
          "urls": [
            "https://github.com/bufbuild/rules_buf/archive/abbbfce7c3fccf1d4b87afa28140d9ce53f80057.zip"
          ],
          "integrity": "sha256-/cvkfvtor1wk3+dSdJqwsqDBrAIV49KM9unuKODCrvs=",
          "strip_prefix": "rules_buf-abbbfce7c3fccf1d4b87afa28140d9ce53f80057",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_buf/0.1.1/patches/bzlmod.patch": "sha256-D5PYozjx10XcIqo0mMyoGIqO3PJHJtxLQ1vo3zesDS0="
          },
          "remote_patch_strip": 1
        }
      }
    }
  },
  "moduleExtensions": {
    "@@apple_support~1.13.0//crosstool:setup.bzl%apple_cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "TMkUP4/N3ZORvZrcDg9FxSoW9r/7+uDVH/SI2biRyJg=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_apple_cc": {
            "bzlFile": "@@apple_support~1.13.0//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf",
            "attributes": {
              "name": "apple_support~1.13.0~apple_cc_configure_extension~local_config_apple_cc"
            }
          },
          "local_config_apple_cc_toolchains": {
            "bzlFile": "@@apple_support~1.13.0//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf_toolchains",
            "attributes": {
              "name": "apple_support~1.13.0~apple_cc_configure_extension~local_config_apple_cc_toolchains"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "apple_support~1.13.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@aspect_bazel_lib~2.9.0//lib:extensions.bzl%toolchains": {
      "general": {
        "bzlTransitiveDigest": "9hZ0hRGG7wmh0TwpsO6JxOQQXjR+0yjf1DE0TuFVHTM=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "expand_template_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~expand_template_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "copy_to_directory_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_to_directory_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "jq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~jq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "1.7"
            }
          },
          "copy_to_directory_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_to_directory_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "expand_template_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~expand_template_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "jq_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~jq_linux_arm64",
              "platform": "linux_arm64",
              "version": "1.7"
            }
          },
          "coreutils_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~coreutils_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "0.0.27"
            }
          },
          "copy_to_directory_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_to_directory_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "bsd_tar_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bsd_tar_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "copy_directory_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_directory_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "coreutils_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~coreutils_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "0.0.27"
            }
          },
          "coreutils_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~coreutils_linux_arm64",
              "platform": "linux_arm64",
              "version": "0.0.27"
            }
          },
          "zstd_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~zstd_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "yq_linux_s390x": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~yq_linux_s390x",
              "platform": "linux_s390x",
              "version": "4.25.2"
            }
          },
          "yq": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_host_alias_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~yq"
            }
          },
          "expand_template_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~expand_template_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "copy_directory_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_directory_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "jq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~jq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "1.7"
            }
          },
          "yq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~yq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "4.25.2"
            }
          },
          "copy_directory_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_directory_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "expand_template_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~expand_template_toolchains",
              "user_repository_name": "expand_template"
            }
          },
          "bats_assert": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bats_assert",
              "sha256": "98ca3b685f8b8993e48ec057565e6e2abcc541034ed5b0e81f191505682037fd",
              "urls": [
                "https://github.com/bats-core/bats-assert/archive/v2.1.0.tar.gz"
              ],
              "strip_prefix": "bats-assert-2.1.0",
              "build_file_content": "load(\"@aspect_bazel_lib//lib:copy_to_directory.bzl\", \"copy_to_directory\")\n\ncopy_to_directory(\n    name = \"assert\",\n    hardlink = \"on\",\n    srcs = glob([\n        \"src/**\",\n        \"load.bash\",\n    ]),\n    out = \"bats-assert\",\n    visibility = [\"//visibility:public\"]\n)\n"
            }
          },
          "copy_to_directory_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_to_directory_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "zstd_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~zstd_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "bsd_tar_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bsd_tar_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "yq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~yq_toolchains",
              "user_repository_name": "yq"
            }
          },
          "zstd_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~zstd_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "bats_support": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bats_support",
              "sha256": "7815237aafeb42ddcc1b8c698fc5808026d33317d8701d5ec2396e9634e2918f",
              "urls": [
                "https://github.com/bats-core/bats-support/archive/v0.3.0.tar.gz"
              ],
              "strip_prefix": "bats-support-0.3.0",
              "build_file_content": "load(\"@aspect_bazel_lib//lib:copy_to_directory.bzl\", \"copy_to_directory\")\n\ncopy_to_directory(\n    name = \"support\",\n    hardlink = \"on\",\n    srcs = glob([\n        \"src/**\",\n        \"load.bash\",\n    ]),\n    out = \"bats-support\",\n    visibility = [\"//visibility:public\"]\n)\n"
            }
          },
          "bsd_tar_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bsd_tar_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "jq": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_host_alias_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~jq"
            }
          },
          "expand_template_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~expand_template_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "bsd_tar_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bsd_tar_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "copy_to_directory_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_to_directory_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "coreutils_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~coreutils_linux_amd64",
              "platform": "linux_amd64",
              "version": "0.0.27"
            }
          },
          "copy_directory_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_directory_toolchains",
              "user_repository_name": "copy_directory"
            }
          },
          "yq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~yq_linux_amd64",
              "platform": "linux_amd64",
              "version": "4.25.2"
            }
          },
          "copy_to_directory_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_to_directory_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "coreutils_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~coreutils_toolchains",
              "user_repository_name": "coreutils"
            }
          },
          "copy_directory_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_directory_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "zstd_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~zstd_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "zstd_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~zstd_toolchains",
              "user_repository_name": "zstd"
            }
          },
          "bats_file": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bats_file",
              "sha256": "9b69043241f3af1c2d251f89b4fcafa5df3f05e97b89db18d7c9bdf5731bb27a",
              "urls": [
                "https://github.com/bats-core/bats-file/archive/v0.4.0.tar.gz"
              ],
              "strip_prefix": "bats-file-0.4.0",
              "build_file_content": "load(\"@aspect_bazel_lib//lib:copy_to_directory.bzl\", \"copy_to_directory\")\n\ncopy_to_directory(\n    name = \"file\",\n    hardlink = \"on\",\n    srcs = glob([\n        \"src/**\",\n        \"load.bash\",\n    ]),\n    out = \"bats-file\",\n    visibility = [\"//visibility:public\"]\n)\n"
            }
          },
          "expand_template_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~expand_template_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "jq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~jq_linux_amd64",
              "platform": "linux_amd64",
              "version": "1.7"
            }
          },
          "bsd_tar_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bsd_tar_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "bsd_tar_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "tar_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bsd_tar_toolchains",
              "user_repository_name": "bsd_tar"
            }
          },
          "bats_toolchains": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~bats_toolchains",
              "sha256": "a1a9f7875aa4b6a9480ca384d5865f1ccf1b0b1faead6b47aa47d79709a5c5fd",
              "urls": [
                "https://github.com/bats-core/bats-core/archive/v1.10.0.tar.gz"
              ],
              "strip_prefix": "bats-core-1.10.0",
              "build_file_content": "load(\"@local_config_platform//:constraints.bzl\", \"HOST_CONSTRAINTS\")\nload(\"@aspect_bazel_lib//lib/private:bats_toolchain.bzl\", \"bats_toolchain\")\nload(\"@aspect_bazel_lib//lib:copy_to_directory.bzl\", \"copy_to_directory\")\n\ncopy_to_directory(\n    name = \"core\",\n    hardlink = \"on\",\n    srcs = glob([\n        \"lib/**\",\n        \"libexec/**\"\n    ]) + [\"bin/bats\"],\n    out = \"bats-core\",\n)\n\nbats_toolchain(\n    name = \"toolchain\",\n    core = \":core\",\n    libraries = [\"@bats_support//:support\", \"@bats_assert//:assert\", \"@bats_file//:file\"]\n)\n\ntoolchain(\n    name = \"bats_toolchain\",\n    exec_compatible_with = HOST_CONSTRAINTS,\n    toolchain = \":toolchain\",\n    toolchain_type = \"@aspect_bazel_lib//lib:bats_toolchain_type\",\n)\n"
            }
          },
          "yq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~yq_windows_amd64",
              "platform": "windows_amd64",
              "version": "4.25.2"
            }
          },
          "jq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~jq_windows_amd64",
              "platform": "windows_amd64",
              "version": "1.7"
            }
          },
          "expand_template_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~expand_template_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "yq_linux_ppc64le": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~yq_linux_ppc64le",
              "platform": "linux_ppc64le",
              "version": "4.25.2"
            }
          },
          "copy_to_directory_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_to_directory_toolchains",
              "user_repository_name": "copy_to_directory"
            }
          },
          "jq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~jq_toolchains",
              "user_repository_name": "jq"
            }
          },
          "copy_directory_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_directory_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "copy_directory_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~copy_directory_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "yq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~yq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "4.25.2"
            }
          },
          "coreutils_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~coreutils_windows_amd64",
              "platform": "windows_amd64",
              "version": "0.0.27"
            }
          },
          "yq_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.9.0~toolchains~yq_linux_arm64",
              "platform": "linux_arm64",
              "version": "4.25.2"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "aspect_bazel_lib~2.9.0",
            "aspect_bazel_lib",
            "aspect_bazel_lib~2.9.0"
          ],
          [
            "aspect_bazel_lib~2.9.0",
            "bazel_skylib",
            "bazel_skylib~1.7.1"
          ],
          [
            "aspect_bazel_lib~2.9.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_features~1.11.0//private:extensions.bzl%version_extension": {
      "general": {
        "bzlTransitiveDigest": "VpwT3fgzK0byotGGNLp1wNzQIMYQFgeDBcuhDfRXFv8=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bazel_features_version": {
            "bzlFile": "@@bazel_features~1.11.0//private:version_repo.bzl",
            "ruleClassName": "version_repo",
            "attributes": {
              "name": "bazel_features~1.11.0~version_extension~bazel_features_version"
            }
          },
          "bazel_features_globals": {
            "bzlFile": "@@bazel_features~1.11.0//private:globals_repo.bzl",
            "ruleClassName": "globals_repo",
            "attributes": {
              "name": "bazel_features~1.11.0~version_extension~bazel_features_globals",
              "globals": {
                "RunEnvironmentInfo": "5.3.0",
                "DefaultInfo": "0.0.1",
                "__TestingOnly_NeverAvailable": "1000000000.0.0"
              }
            }
          }
        },
        "moduleExtensionMetadata": {
          "useAllRepos": "DEV"
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~1.11.0",
            "bazel_skylib",
            "bazel_skylib~1.7.1"
          ],
          [
            "bazel_features~1.11.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_tools//tools/cpp:cc_configure.bzl%cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "mcsWHq3xORJexV5/4eCvNOLxFOQKV6eli3fkr+tEaqE=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_cc": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf",
            "attributes": {
              "name": "bazel_tools~cc_configure_extension~local_config_cc"
            }
          },
          "local_config_cc_toolchains": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf_toolchains",
            "attributes": {
              "name": "bazel_tools~cc_configure_extension~local_config_cc_toolchains"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_tools",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_tools//tools/osx:xcode_configure.bzl%xcode_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "Qh2bWTU6QW6wkrd87qrU4YeY+SG37Nvw3A0PR4Y0L2Y=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_xcode": {
            "bzlFile": "@@bazel_tools//tools/osx:xcode_configure.bzl",
            "ruleClassName": "xcode_autoconf",
            "attributes": {
              "name": "bazel_tools~xcode_configure_extension~local_config_xcode",
              "xcode_locator": "@bazel_tools//tools/osx:xcode_locator.m",
              "remote_xcode": ""
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@bazel_tools//tools/sh:sh_configure.bzl%sh_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "hp4NgmNjEg5+xgvzfh6L83bt9/aiiWETuNpwNuF1MSU=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_sh": {
            "bzlFile": "@@bazel_tools//tools/sh:sh_configure.bzl",
            "ruleClassName": "sh_config",
            "attributes": {
              "name": "bazel_tools~sh_configure_extension~local_config_sh"
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@gazelle~0.38.0//:extensions.bzl%go_deps": {
      "general": {
        "bzlTransitiveDigest": "qPy5sk/+07dVvOaKI1My2FMWGVaEkyAeAkMqXy/rYEU=",
        "accumulatedFileDigests": {
          "@@//:go.mod": "fa1a5d4ba6765e5897c89fb4b3dd38fc542519171ec5fc0d093020ff7736ebf3",
          "@@rules_go~0.50.1//:go.mod": "de22304b720f7f61350ec1c9739de6c0a1b1103fd22bfeb6e92c6c843ddc6d6e",
          "@@gazelle~0.38.0//:go.mod": "d94815a048de2543558b533445c3af2f320c8e28f2d85211790dcc87e603622b",
          "@@//:go.sum": "a047b9524720a2a0454f6e45fd991fb1d9f03f6fd2681a9d8fefd53c2ab714c4",
          "@@rules_go~0.50.1//:go.sum": "d56fdb19b21a5f12bcf625c49432371ac39c2def0f564098fbda107f7c080f40",
          "@@gazelle~0.38.0//:go.sum": "14df932fff1ea6aa2b9ac6ad53b8acf3d1cffe44e3375e75d1c4c9d2a86d3473"
        },
        "envVariables": {},
        "generatedRepoSpecs": {
          "com_github_inconshreveable_mousetrap": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_inconshreveable_mousetrap",
              "internal_only_do_not_use_apparent_name": "com_github_inconshreveable_mousetrap",
              "importpath": "github.com/inconshreveable/mousetrap",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=",
              "replace": "",
              "version": "v1.1.0"
            }
          },
          "com_github_facebookgo_clock": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_facebookgo_clock",
              "internal_only_do_not_use_apparent_name": "com_github_facebookgo_clock",
              "importpath": "github.com/facebookgo/clock",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:yDWHCSQ40h88yih2JAcL6Ls/kVkSE8GFACTGVnMPruw=",
              "replace": "",
              "version": "v0.0.0-20150410010913-600d898af40a"
            }
          },
          "org_golang_x_tools_go_vcs": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_x_tools_go_vcs",
              "internal_only_do_not_use_apparent_name": "org_golang_x_tools_go_vcs",
              "importpath": "golang.org/x/tools/go/vcs",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:cOIJqWBl99H1dH5LWizPa+0ImeeJq3t3cJjaeOWUAL4=",
              "replace": "",
              "version": "v0.1.0-deprecated"
            }
          },
          "com_github_klauspost_compress": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_klauspost_compress",
              "internal_only_do_not_use_apparent_name": "com_github_klauspost_compress",
              "importpath": "github.com/klauspost/compress",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:wKRjX6JRtDdrE9qwa4b/Cip7ACOshUI4smpCQanqjSY=",
              "replace": "",
              "version": "v1.15.9"
            }
          },
          "com_github_fsnotify_fsnotify": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_fsnotify_fsnotify",
              "internal_only_do_not_use_apparent_name": "com_github_fsnotify_fsnotify",
              "importpath": "github.com/fsnotify/fsnotify",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "org_golang_google_grpc_cmd_protoc_gen_go_grpc": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_google_grpc_cmd_protoc_gen_go_grpc",
              "internal_only_do_not_use_apparent_name": "org_golang_google_grpc_cmd_protoc_gen_go_grpc",
              "importpath": "google.golang.org/grpc/cmd/protoc-gen-go-grpc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:rNBFJjBCOgVr9pWD7rs/knKL4FRTKgpZmsRfV214zcA=",
              "replace": "",
              "version": "v1.3.0"
            }
          },
          "com_github_mattn_go_colorable": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_mattn_go_colorable",
              "internal_only_do_not_use_apparent_name": "com_github_mattn_go_colorable",
              "importpath": "github.com/mattn/go-colorable",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:nQ+aFkoE2TMGc0b68U2OKSexC+eq46+XwZzWXHRmPYs=",
              "replace": "",
              "version": "v0.1.11"
            }
          },
          "com_github_spf13_cobra": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_spf13_cobra",
              "internal_only_do_not_use_apparent_name": "com_github_spf13_cobra",
              "importpath": "github.com/spf13/cobra",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:o94oiPyS4KD1mPy2fmcYYHHfCxLqYjJOhGsCHFZtEzA=",
              "replace": "",
              "version": "v1.6.1"
            }
          },
          "com_github_pmezard_go_difflib": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_pmezard_go_difflib",
              "internal_only_do_not_use_apparent_name": "com_github_pmezard_go_difflib",
              "importpath": "github.com/pmezard/go-difflib",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_bmatcuk_doublestar_v4": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_bmatcuk_doublestar_v4",
              "internal_only_do_not_use_apparent_name": "com_github_bmatcuk_doublestar_v4",
              "importpath": "github.com/bmatcuk/doublestar/v4",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:FH9SifrbvJhnlQpztAx++wlkk70QBf0iBWDwNy7PA4I=",
              "replace": "",
              "version": "v4.6.1"
            }
          },
          "com_github_honeycombio_libhoney_go": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_honeycombio_libhoney_go",
              "internal_only_do_not_use_apparent_name": "com_github_honeycombio_libhoney_go",
              "importpath": "github.com/honeycombio/libhoney-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:qOHGm5lqzj82O5RvsqTM0OhbEUxY+t9WoKPaD9FJJ5o=",
              "replace": "",
              "version": "v1.17.1"
            }
          },
          "com_github_mattn_go_isatty": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_mattn_go_isatty",
              "internal_only_do_not_use_apparent_name": "com_github_mattn_go_isatty",
              "importpath": "github.com/mattn/go-isatty",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:yVuAays6BHfxijgZPzw+3Zlu5yQgKGP2/hcQbHb7S9Y=",
              "replace": "",
              "version": "v0.0.14"
            }
          },
          "com_github_davecgh_go_spew": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_davecgh_go_spew",
              "internal_only_do_not_use_apparent_name": "com_github_davecgh_go_spew",
              "importpath": "github.com/davecgh/go-spew",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=",
              "replace": "",
              "version": "v1.1.1"
            }
          },
          "org_golang_x_tools": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_x_tools",
              "internal_only_do_not_use_apparent_name": "org_golang_x_tools",
              "importpath": "golang.org/x/tools",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:k8NLag8AGHnn+PHbl7g43CtqZAwG60vZkLqgyZgIHgQ=",
              "replace": "",
              "version": "v0.18.0"
            }
          },
          "org_golang_x_net": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_x_net",
              "internal_only_do_not_use_apparent_name": "org_golang_x_net",
              "importpath": "golang.org/x/net",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:mIYleuAkSbHh0tCv7RvjL3F6ZVbLjq4+R7zbOn3Kokg=",
              "replace": "",
              "version": "v0.18.0"
            }
          },
          "com_github_bazelbuild_buildtools": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_bazelbuild_buildtools",
              "internal_only_do_not_use_apparent_name": "com_github_bazelbuild_buildtools",
              "importpath": "github.com/bazelbuild/buildtools",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:VNqmvOfFzn2Hrtoni8vqgXlIQ4C2Zt22fxeZ9gOOkp0=",
              "replace": "",
              "version": "v0.0.0-20240313121412-66c605173954"
            }
          },
          "org_golang_google_genproto": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_google_genproto",
              "internal_only_do_not_use_apparent_name": "org_golang_google_genproto",
              "importpath": "google.golang.org/genproto",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:wtujag7C+4D6KMoulW9YauvK2lgdvCMS260jsqqBXr0=",
              "replace": "",
              "version": "v0.0.0-20210602131652-f16073e35f0c"
            }
          },
          "com_github_spf13_pflag": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_spf13_pflag",
              "internal_only_do_not_use_apparent_name": "com_github_spf13_pflag",
              "importpath": "github.com/spf13/pflag",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=",
              "replace": "",
              "version": "v1.0.5"
            }
          },
          "com_github_gogo_protobuf": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_gogo_protobuf",
              "internal_only_do_not_use_apparent_name": "com_github_gogo_protobuf",
              "importpath": "github.com/gogo/protobuf",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
              "replace": "",
              "version": "v1.3.2"
            }
          },
          "com_github_facebookgo_limitgroup": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_facebookgo_limitgroup",
              "internal_only_do_not_use_apparent_name": "com_github_facebookgo_limitgroup",
              "importpath": "github.com/facebookgo/limitgroup",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:IeaD1VDVBPlx3viJT9Md8if8IxxJnO+x0JCGb054heg=",
              "replace": "",
              "version": "v0.0.0-20150612190941-6abd8d71ec01"
            }
          },
          "com_github_schollz_closestmatch": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_schollz_closestmatch",
              "internal_only_do_not_use_apparent_name": "com_github_schollz_closestmatch",
              "importpath": "github.com/schollz/closestmatch",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:Uel2GXEpJqOWBrlyI+oY9LTiyyjYS17cCYRqP13/SHk=",
              "replace": "",
              "version": "v2.1.0+incompatible"
            }
          },
          "com_github_stretchr_testify": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_stretchr_testify",
              "internal_only_do_not_use_apparent_name": "com_github_stretchr_testify",
              "importpath": "github.com/stretchr/testify",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=",
              "replace": "",
              "version": "v1.8.1"
            }
          },
          "com_github_vmihailenco_msgpack_v5": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_vmihailenco_msgpack_v5",
              "internal_only_do_not_use_apparent_name": "com_github_vmihailenco_msgpack_v5",
              "importpath": "github.com/vmihailenco/msgpack/v5",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:5gO0H1iULLWGhs2H5tbAHIZTV8/cYafcFOr9znI5mJU=",
              "replace": "",
              "version": "v5.3.5"
            }
          },
          "com_github_golang_mock": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_golang_mock",
              "internal_only_do_not_use_apparent_name": "com_github_golang_mock",
              "importpath": "github.com/golang/mock",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:YojYx61/OLFsiv6Rw1Z96LpldJIy31o+UHmwAUMJ6/U=",
              "replace": "",
              "version": "v1.7.0-rc.1"
            }
          },
          "org_golang_x_sync": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_x_sync",
              "internal_only_do_not_use_apparent_name": "org_golang_x_sync",
              "importpath": "golang.org/x/sync",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=",
              "replace": "",
              "version": "v0.6.0"
            }
          },
          "org_golang_google_grpc": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_google_grpc",
              "internal_only_do_not_use_apparent_name": "org_golang_google_grpc",
              "importpath": "google.golang.org/grpc",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "on",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:WTLtQzmQori5FUH25Pq4WT22oCsv8USpQ+F6rqtsmxw=",
              "replace": "",
              "version": "v1.49.0"
            }
          },
          "com_github_vmihailenco_tagparser_v2": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_vmihailenco_tagparser_v2",
              "internal_only_do_not_use_apparent_name": "com_github_vmihailenco_tagparser_v2",
              "importpath": "github.com/vmihailenco/tagparser/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:y09buUbR+b5aycVFQs/g70pqKVZNBmxwAhO7/IwNM9g=",
              "replace": "",
              "version": "v2.0.0"
            }
          },
          "com_github_facebookgo_muster": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_facebookgo_muster",
              "internal_only_do_not_use_apparent_name": "com_github_facebookgo_muster",
              "importpath": "github.com/facebookgo/muster",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:a4DFiKFJiDRGFD1qIcqGLX/WlUMD9dyLSLDt+9QZgt8=",
              "replace": "",
              "version": "v0.0.0-20150708232844-fd3d7953fd52"
            }
          },
          "com_github_google_go_cmp": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_google_go_cmp",
              "internal_only_do_not_use_apparent_name": "com_github_google_go_cmp",
              "importpath": "github.com/google/go-cmp",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=",
              "replace": "",
              "version": "v0.6.0"
            }
          },
          "in_gopkg_alexcesaro_statsd_v2": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~in_gopkg_alexcesaro_statsd_v2",
              "internal_only_do_not_use_apparent_name": "in_gopkg_alexcesaro_statsd_v2",
              "importpath": "gopkg.in/alexcesaro/statsd.v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:FXkZSCZIH17vLCO5sO2UucTHsH9pc+17F6pl3JVCwMc=",
              "replace": "",
              "version": "v2.0.0"
            }
          },
          "org_golang_x_text": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_x_text",
              "internal_only_do_not_use_apparent_name": "org_golang_x_text",
              "importpath": "golang.org/x/text",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=",
              "replace": "",
              "version": "v0.14.0"
            }
          },
          "org_golang_google_protobuf": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_google_protobuf",
              "internal_only_do_not_use_apparent_name": "org_golang_google_protobuf",
              "importpath": "google.golang.org/protobuf",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:g0LDEJHgrBl9N9r17Ru3sqWhkIx2NB67okBHPwC7hs8=",
              "replace": "",
              "version": "v1.31.0"
            }
          },
          "org_golang_x_mod": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_x_mod",
              "internal_only_do_not_use_apparent_name": "org_golang_x_mod",
              "importpath": "golang.org/x/mod",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:QX4fJ0Rr5cPQCF7O9lh9Se4pmwfwskqZfq5moyldzic=",
              "replace": "",
              "version": "v0.16.0"
            }
          },
          "com_github_fatih_color": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_fatih_color",
              "internal_only_do_not_use_apparent_name": "com_github_fatih_color",
              "importpath": "github.com/fatih/color",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:8LOYc1KYPPmyKMuN8QV2DNRWNbLo6LZ0iLs8+mlH53w=",
              "replace": "",
              "version": "v1.13.0"
            }
          },
          "com_github_honeycombio_beeline_go": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_honeycombio_beeline_go",
              "internal_only_do_not_use_apparent_name": "com_github_honeycombio_beeline_go",
              "importpath": "github.com/honeycombio/beeline-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:cyrfwgxM32DKzUhZFJ0KLbPkoyf5lHOyn+7GISwEVZQ=",
              "replace": "",
              "version": "v1.11.1"
            }
          },
          "in_gopkg_yaml_v3": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~in_gopkg_yaml_v3",
              "internal_only_do_not_use_apparent_name": "in_gopkg_yaml_v3",
              "importpath": "gopkg.in/yaml.v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=",
              "replace": "",
              "version": "v3.0.1"
            }
          },
          "com_github_golang_protobuf": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~com_github_golang_protobuf",
              "internal_only_do_not_use_apparent_name": "com_github_golang_protobuf",
              "importpath": "github.com/golang/protobuf",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=",
              "replace": "",
              "version": "v1.5.3"
            }
          },
          "bazel_gazelle_go_repository_config": {
            "bzlFile": "@@gazelle~0.38.0//internal/bzlmod:go_deps.bzl",
            "ruleClassName": "_go_repository_config",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~bazel_gazelle_go_repository_config",
              "importpaths": {
                "com_github_fatih_color": "github.com/fatih/color",
                "com_github_golang_protobuf": "github.com/golang/protobuf",
                "com_github_google_go_cmp": "github.com/google/go-cmp",
                "com_github_honeycombio_beeline_go": "github.com/honeycombio/beeline-go",
                "com_github_schollz_closestmatch": "github.com/schollz/closestmatch",
                "com_github_spf13_cobra": "github.com/spf13/cobra",
                "com_github_stretchr_testify": "github.com/stretchr/testify",
                "org_golang_google_genproto": "google.golang.org/genproto",
                "org_golang_google_grpc": "google.golang.org/grpc",
                "org_golang_google_protobuf": "google.golang.org/protobuf",
                "com_github_davecgh_go_spew": "github.com/davecgh/go-spew",
                "com_github_facebookgo_clock": "github.com/facebookgo/clock",
                "com_github_facebookgo_limitgroup": "github.com/facebookgo/limitgroup",
                "com_github_facebookgo_muster": "github.com/facebookgo/muster",
                "com_github_honeycombio_libhoney_go": "github.com/honeycombio/libhoney-go",
                "com_github_inconshreveable_mousetrap": "github.com/inconshreveable/mousetrap",
                "com_github_klauspost_compress": "github.com/klauspost/compress",
                "com_github_mattn_go_colorable": "github.com/mattn/go-colorable",
                "com_github_mattn_go_isatty": "github.com/mattn/go-isatty",
                "com_github_pmezard_go_difflib": "github.com/pmezard/go-difflib",
                "com_github_spf13_pflag": "github.com/spf13/pflag",
                "com_github_vmihailenco_msgpack_v5": "github.com/vmihailenco/msgpack/v5",
                "com_github_vmihailenco_tagparser_v2": "github.com/vmihailenco/tagparser/v2",
                "org_golang_x_sys": "golang.org/x/sys",
                "in_gopkg_alexcesaro_statsd_v2": "gopkg.in/alexcesaro/statsd.v2",
                "in_gopkg_yaml_v3": "gopkg.in/yaml.v3",
                "com_github_gogo_protobuf": "github.com/gogo/protobuf",
                "com_github_golang_mock": "github.com/golang/mock",
                "org_golang_x_net": "golang.org/x/net",
                "org_golang_x_tools": "golang.org/x/tools",
                "org_golang_google_grpc_cmd_protoc_gen_go_grpc": "google.golang.org/grpc/cmd/protoc-gen-go-grpc",
                "org_golang_x_mod": "golang.org/x/mod",
                "org_golang_x_text": "golang.org/x/text",
                "com_github_bazelbuild_buildtools": "github.com/bazelbuild/buildtools",
                "com_github_bmatcuk_doublestar_v4": "github.com/bmatcuk/doublestar/v4",
                "com_github_fsnotify_fsnotify": "github.com/fsnotify/fsnotify",
                "org_golang_x_sync": "golang.org/x/sync",
                "org_golang_x_tools_go_vcs": "golang.org/x/tools/go/vcs",
                "@rules_go~0.50.1": "github.com/bazelbuild/rules_go",
                "@gazelle~0.38.0": "github.com/bazelbuild/bazel-gazelle"
              },
              "module_names": {
                "@rules_go~0.50.1": "rules_go",
                "@gazelle~0.38.0": "gazelle"
              },
              "build_naming_conventions": {},
              "go_env": {},
              "dep_files": [
                "go.mod"
              ]
            }
          },
          "org_golang_x_sys": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.38.0~go_deps~org_golang_x_sys",
              "internal_only_do_not_use_apparent_name": "org_golang_x_sys",
              "importpath": "golang.org/x/sys",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "debug_mode": false,
              "sum": "h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=",
              "replace": "",
              "version": "v0.18.0"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "com_github_fatih_color",
            "com_github_golang_protobuf",
            "com_github_google_go_cmp",
            "com_github_honeycombio_beeline_go",
            "com_github_schollz_closestmatch",
            "com_github_spf13_cobra",
            "com_github_stretchr_testify",
            "org_golang_google_genproto",
            "org_golang_google_grpc",
            "org_golang_google_protobuf"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO"
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~1.11.0",
            "bazel_features_globals",
            "bazel_features~1.11.0~version_extension~bazel_features_globals"
          ],
          [
            "bazel_features~1.11.0",
            "bazel_features_version",
            "bazel_features~1.11.0~version_extension~bazel_features_version"
          ],
          [
            "gazelle~0.38.0",
            "bazel_features",
            "bazel_features~1.11.0"
          ],
          [
            "gazelle~0.38.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@gazelle~0.38.0//internal/bzlmod:non_module_deps.bzl%non_module_deps": {
      "general": {
        "bzlTransitiveDigest": "tpA3fn0D20bRiWpbOkt1DuI0K8TaS3I9InI5CwTx2Uc=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bazel_gazelle_is_bazel_module": {
            "bzlFile": "@@gazelle~0.38.0//internal:is_bazel_module.bzl",
            "ruleClassName": "is_bazel_module",
            "attributes": {
              "name": "gazelle~0.38.0~non_module_deps~bazel_gazelle_is_bazel_module",
              "is_bazel_module": true
            }
          },
          "bazel_gazelle_go_repository_tools": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository_tools.bzl",
            "ruleClassName": "go_repository_tools",
            "attributes": {
              "name": "gazelle~0.38.0~non_module_deps~bazel_gazelle_go_repository_tools",
              "go_cache": "@@gazelle~0.38.0~non_module_deps~bazel_gazelle_go_repository_cache//:go.env"
            }
          },
          "bazel_gazelle_go_repository_cache": {
            "bzlFile": "@@gazelle~0.38.0//internal:go_repository_cache.bzl",
            "ruleClassName": "go_repository_cache",
            "attributes": {
              "name": "gazelle~0.38.0~non_module_deps~bazel_gazelle_go_repository_cache",
              "go_sdk_name": "@rules_go~0.50.1~go_sdk~go_default_sdk",
              "go_env": {}
            }
          }
        },
        "moduleExtensionMetadata": {
          "useAllRepos": "NO"
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~1.11.0",
            "bazel_features_globals",
            "bazel_features~1.11.0~version_extension~bazel_features_globals"
          ],
          [
            "bazel_features~1.11.0",
            "bazel_features_version",
            "bazel_features~1.11.0~version_extension~bazel_features_version"
          ],
          [
            "gazelle~0.38.0",
            "bazel_features",
            "bazel_features~1.11.0"
          ],
          [
            "gazelle~0.38.0",
            "bazel_gazelle_go_repository_cache",
            "gazelle~0.38.0~non_module_deps~bazel_gazelle_go_repository_cache"
          ],
          [
            "gazelle~0.38.0",
            "bazel_gazelle_go_repository_config",
            "gazelle~0.38.0~go_deps~bazel_gazelle_go_repository_config"
          ],
          [
            "gazelle~0.38.0",
            "go_host_compatible_sdk_label",
            "rules_go~0.50.1~go_sdk~go_host_compatible_sdk_label"
          ],
          [
            "rules_go~0.50.1~go_sdk~go_host_compatible_sdk_label",
            "go_default_sdk",
            "rules_go~0.50.1~go_sdk~go_default_sdk"
          ]
        ]
      }
    },
    "@@rules_buf~0.1.1//buf:extensions.bzl%ext": {
      "general": {
        "bzlTransitiveDigest": "+opT3S3Uq1Jv9SRn79PC3xP4IMlTWGXpXakUIi70oE0=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "rules_buf_toolchains": {
            "bzlFile": "@@rules_buf~0.1.1//buf/internal:toolchain.bzl",
            "ruleClassName": "buf_download_releases",
            "attributes": {
              "name": "rules_buf~0.1.1~ext~rules_buf_toolchains",
              "version": "v1.27.0"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_buf~0.1.1",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_go~0.50.1//go:extensions.bzl%go_sdk": {
      "os:linux,arch:amd64": {
        "bzlTransitiveDigest": "qOkxyUog0XIuGiqD6Ucm4grhqtB3G2/2EgwOp5STgJ4=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "io_bazel_rules_nogo": {
            "bzlFile": "@@rules_go~0.50.1//go/private:nogo.bzl",
            "ruleClassName": "go_register_nogo",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~io_bazel_rules_nogo",
              "nogo": "@io_bazel_rules_go//:default_nogo",
              "includes": [
                "'@@//:__subpackages__'"
              ],
              "excludes": []
            }
          },
          "rules_go__download_0_windows_arm64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_windows_arm64",
              "goos": "windows",
              "goarch": "arm64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          },
          "rules_go__download_0_linux_arm64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_linux_arm64",
              "goos": "linux",
              "goarch": "arm64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          },
          "go_default_sdk": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~go_default_sdk",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "experiments": [],
              "patches": [],
              "patch_strip": 0,
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8",
              "strip_prefix": "go"
            }
          },
          "rules_go__download_0_darwin_arm64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_darwin_arm64",
              "goos": "darwin",
              "goarch": "arm64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          },
          "go_host_compatible_sdk_label": {
            "bzlFile": "@@rules_go~0.50.1//go/private:extensions.bzl",
            "ruleClassName": "host_compatible_toolchain",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~go_host_compatible_sdk_label",
              "toolchain": "@go_default_sdk//:ROOT"
            }
          },
          "rules_go__download_0_darwin_amd64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_darwin_amd64",
              "goos": "darwin",
              "goarch": "amd64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          },
          "go_toolchains": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_multiple_toolchains",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~go_toolchains",
              "prefixes": [
                "_0000_go_default_sdk_",
                "_0001_rules_go__download_0_darwin_amd64_",
                "_0002_rules_go__download_0_darwin_arm64_",
                "_0003_rules_go__download_0_linux_arm64_",
                "_0004_rules_go__download_0_windows_amd64_",
                "_0005_rules_go__download_0_windows_arm64_"
              ],
              "geese": [
                "",
                "darwin",
                "darwin",
                "linux",
                "windows",
                "windows"
              ],
              "goarchs": [
                "",
                "amd64",
                "arm64",
                "arm64",
                "amd64",
                "arm64"
              ],
              "sdk_repos": [
                "go_default_sdk",
                "rules_go__download_0_darwin_amd64",
                "rules_go__download_0_darwin_arm64",
                "rules_go__download_0_linux_arm64",
                "rules_go__download_0_windows_amd64",
                "rules_go__download_0_windows_arm64"
              ],
              "sdk_types": [
                "remote",
                "remote",
                "remote",
                "remote",
                "remote",
                "remote"
              ],
              "sdk_versions": [
                "1.21.8",
                "1.21.8",
                "1.21.8",
                "1.21.8",
                "1.21.8",
                "1.21.8"
              ]
            }
          },
          "rules_go__download_0_windows_amd64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_windows_amd64",
              "goos": "windows",
              "goarch": "amd64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~1.11.0",
            "bazel_features_globals",
            "bazel_features~1.11.0~version_extension~bazel_features_globals"
          ],
          [
            "bazel_features~1.11.0",
            "bazel_features_version",
            "bazel_features~1.11.0~version_extension~bazel_features_version"
          ],
          [
            "rules_go~0.50.1",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_go~0.50.1",
            "io_bazel_rules_go",
            "rules_go~0.50.1"
          ],
          [
            "rules_go~0.50.1",
            "io_bazel_rules_go_bazel_features",
            "bazel_features~1.11.0"
          ]
        ]
      },
      "os:osx,arch:x86_64": {
        "bzlTransitiveDigest": "qOkxyUog0XIuGiqD6Ucm4grhqtB3G2/2EgwOp5STgJ4=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "io_bazel_rules_nogo": {
            "bzlFile": "@@rules_go~0.50.1//go/private:nogo.bzl",
            "ruleClassName": "go_register_nogo",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~io_bazel_rules_nogo",
              "nogo": "@io_bazel_rules_go//:default_nogo",
              "includes": [
                "'@@//:__subpackages__'"
              ],
              "excludes": []
            }
          },
          "rules_go__download_0_windows_arm64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_windows_arm64",
              "goos": "windows",
              "goarch": "arm64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          },
          "rules_go__download_0_linux_arm64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_linux_arm64",
              "goos": "linux",
              "goarch": "arm64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          },
          "go_default_sdk": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~go_default_sdk",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "experiments": [],
              "patches": [],
              "patch_strip": 0,
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8",
              "strip_prefix": "go"
            }
          },
          "rules_go__download_0_darwin_arm64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_darwin_arm64",
              "goos": "darwin",
              "goarch": "arm64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          },
          "go_host_compatible_sdk_label": {
            "bzlFile": "@@rules_go~0.50.1//go/private:extensions.bzl",
            "ruleClassName": "host_compatible_toolchain",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~go_host_compatible_sdk_label",
              "toolchain": "@go_default_sdk//:ROOT"
            }
          },
          "rules_go__download_0_linux_amd64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_linux_amd64",
              "goos": "linux",
              "goarch": "amd64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          },
          "go_toolchains": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_multiple_toolchains",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~go_toolchains",
              "prefixes": [
                "_0000_go_default_sdk_",
                "_0001_rules_go__download_0_darwin_arm64_",
                "_0002_rules_go__download_0_linux_amd64_",
                "_0003_rules_go__download_0_linux_arm64_",
                "_0004_rules_go__download_0_windows_amd64_",
                "_0005_rules_go__download_0_windows_arm64_"
              ],
              "geese": [
                "",
                "darwin",
                "linux",
                "linux",
                "windows",
                "windows"
              ],
              "goarchs": [
                "",
                "arm64",
                "amd64",
                "arm64",
                "amd64",
                "arm64"
              ],
              "sdk_repos": [
                "go_default_sdk",
                "rules_go__download_0_darwin_arm64",
                "rules_go__download_0_linux_amd64",
                "rules_go__download_0_linux_arm64",
                "rules_go__download_0_windows_amd64",
                "rules_go__download_0_windows_arm64"
              ],
              "sdk_types": [
                "remote",
                "remote",
                "remote",
                "remote",
                "remote",
                "remote"
              ],
              "sdk_versions": [
                "1.21.8",
                "1.21.8",
                "1.21.8",
                "1.21.8",
                "1.21.8",
                "1.21.8"
              ]
            }
          },
          "rules_go__download_0_windows_amd64": {
            "bzlFile": "@@rules_go~0.50.1//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.50.1~go_sdk~rules_go__download_0_windows_amd64",
              "goos": "windows",
              "goarch": "amd64",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.8"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~1.11.0",
            "bazel_features_globals",
            "bazel_features~1.11.0~version_extension~bazel_features_globals"
          ],
          [
            "bazel_features~1.11.0",
            "bazel_features_version",
            "bazel_features~1.11.0~version_extension~bazel_features_version"
          ],
          [
            "rules_go~0.50.1",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_go~0.50.1",
            "io_bazel_rules_go",
            "rules_go~0.50.1"
          ],
          [
            "rules_go~0.50.1",
            "io_bazel_rules_go_bazel_features",
            "bazel_features~1.11.0"
          ]
        ]
      }
    },
    "@@rules_java~7.11.1//java:extensions.bzl%toolchains": {
      "general": {
        "bzlTransitiveDigest": "ghBLHIQyb5lvO1QehQTjkcVRoXhQxf9zsTheX1Q3v88=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "remotejdk17_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\n"
            }
          },
          "remote_java_tools_windows": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_java_tools_windows",
              "sha256": "bae74a8f1c7d3d5f73f944a31446b2d87d4e94966ef9cc0bc6b07de6fed6e382",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.8/java_tools_windows-v13.8.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.8/java_tools_windows-v13.8.zip"
              ]
            }
          },
          "remotejdk11_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\n"
            }
          },
          "remotejdk21_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_linux_ppc64le",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "d08de863499d8851811c893e8915828f2cd8eb67ed9e29432a6b4e222d80a12f",
              "strip_prefix": "jdk-21.0.2+13",
              "urls": [
                "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.2+13/OpenJDK21U-jdk_ppc64le_linux_hotspot_21.0.2_13.tar.gz",
                "https://mirror.bazel.build/github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.2+13/OpenJDK21U-jdk_ppc64le_linux_hotspot_21.0.2_13.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "be7d7574253c893eb58f66e985c75adf48558c41885827d1f02f827e109530e0",
              "strip_prefix": "zulu11.72.19-ca-jdk11.0.23-linux_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-linux_aarch64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "a1e8ac9ae5804b84dc07cf9d8ebe1b18247d70c92c1e0de97ea10109563f4379",
              "strip_prefix": "zulu17.50.19-ca-jdk17.0.11-linux_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-linux_x64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "b384991e93af39abe5229c7f5efbe912a7c5a6480674a6e773f3a9128f96a764",
              "strip_prefix": "zulu17.50.19-ca-jdk17.0.11-macosx_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-macosx_x64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "43f0f1bdecf48ba9763d46ee7784554c95b442ffdd39ebd62dc8b297cc82e116",
              "strip_prefix": "zulu17.50.19-ca-jdk17.0.11-win_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-win_x64.zip",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-win_x64.zip"
              ]
            }
          },
          "remote_jdk8_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_8\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"8\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_linux_ppc64le_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remote_jdk8_windows": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_windows",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n",
              "sha256": "ca5499c301d5b42604d8535b8c40a7f928a796247b8c66a600333dd799798ff7",
              "strip_prefix": "zulu8.78.0.19-ca-jdk8.0.412-win_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-win_x64.zip",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-win_x64.zip"
              ]
            }
          },
          "remote_jdk8_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n",
              "sha256": "35bc35808379400e4a70e1f7ee379778881799b93c2cc9fe1ae515c03c2fb057",
              "strip_prefix": "zulu8.78.0.19-ca-jdk8.0.412-macosx_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-macosx_aarch64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remote_jdk8_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n",
              "sha256": "276a431c79b7e94bc1b1b4fd88523383ae2d635ea67114dfc8a6174267f8fb2c",
              "strip_prefix": "jdk8u292-b10",
              "urls": [
                "https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u292-b10/OpenJDK8U-jdk_s390x_linux_hotspot_8u292b10.tar.gz",
                "https://mirror.bazel.build/github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u292-b10/OpenJDK8U-jdk_s390x_linux_hotspot_8u292b10.tar.gz"
              ]
            }
          },
          "remotejdk17_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_win_arm64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "0a4d1bfc7a96a7f9f5329b72b9801b3c53366417b4753f1b658fa240204c7347",
              "strip_prefix": "zulu11.72.19-ca-jdk11.0.23-linux_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-linux_x64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_win_arm64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "b8833d272eb31f54f8c881139807a28a74de9deae07d2cc37688ff72043e32c9",
              "strip_prefix": "zulu17.50.19-ca-jdk17.0.11-win_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-win_aarch64.zip",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-win_aarch64.zip"
              ]
            }
          },
          "remotejdk17_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_linux_ppc64le",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "00a4c07603d0218cd678461b5b3b7e25b3253102da4022d31fc35907f21a2efd",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1+1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1+1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk21_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_win_arm64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win_arm64//:jdk\",\n)\n"
            }
          },
          "remote_jdk8_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n",
              "sha256": "2bfa0506196962bddb21a604eaa2b0b39eaf3383d0bdad08bdbe7f42f25d8928",
              "strip_prefix": "zulu8.78.0.19-ca-jdk8.0.412-macosx_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-macosx_x64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_s390x//:jdk\",\n)\n"
            }
          },
          "local_jdk": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:local_java_repository.bzl",
            "ruleClassName": "_local_java_repository_rule",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~local_jdk",
              "runtime_name": "local_jdk",
              "java_home": "",
              "version": "",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = {RUNTIME_VERSION},\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = {RUNTIME_VERSION},\n)\n"
            }
          },
          "remote_java_tools_darwin_x86_64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_java_tools_darwin_x86_64",
              "sha256": "78a750e24d0bf0f125f3bb4218f58c4e60343f3d28c834e88bd09c7924c83d8d",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.8/java_tools_darwin_x86_64-v13.8.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.8/java_tools_darwin_x86_64-v13.8.zip"
              ]
            }
          },
          "remote_jdk8_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_8\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"8\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remote_java_tools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_java_tools",
              "sha256": "224287ef2b581795392cbd8b1b9f4306d11abb95bba41ea72810cc9c7872a5f8",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.8/java_tools-v13.8.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.8/java_tools-v13.8.zip"
              ]
            }
          },
          "remotejdk17_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\n"
            }
          },
          "remotejdk21_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\n"
            }
          },
          "remote_jdk8_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_8\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"8\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "4f42a561909d71868a700cf2efa1390e1b9e04863f3fa75ea30c4965e5a702f0",
              "strip_prefix": "zulu21.34.19-ca-jdk21.0.3-macosx_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-macosx_aarch64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remote_jdk8_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_8\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"8\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "dd1a82d57e80cdefb045066e5c28b5bd41e57eea9c57303ec7e012b57230bb9c",
              "strip_prefix": "zulu17.50.19-ca-jdk17.0.11-macosx_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-macosx_aarch64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remote_jdk8_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_8\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"8\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "1295b2affe498018c45f6f15187b58c4456d51dce5eb608ee73ef7665d4566d2",
              "strip_prefix": "zulu11.72.19-ca-jdk11.0.23-win_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-win_x64.zip",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-win_x64.zip"
              ]
            }
          },
          "remote_jdk8_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n",
              "sha256": "9c0ac5ebffa61520fee78ead52add0f4edd3b1b54b01b6a17429b719515caf90",
              "strip_prefix": "zulu8.78.0.19-ca-jdk8.0.412-linux_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-linux_x64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk11_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "e5b19b82045826ae09c9d17742691bc9e40312c44be7bd7598ae418a3d4edb1c",
              "strip_prefix": "zulu11.72.19-ca-jdk11.0.23-macosx_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-macosx_x64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_win_arm64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "b8a28e6e767d90acf793ea6f5bed0bb595ba0ba5ebdf8b99f395266161e53ec2",
              "strip_prefix": "jdk-11.0.13+8",
              "urls": [
                "https://aka.ms/download-jdk/microsoft-jdk-11.0.13.8.1-windows-aarch64.zip",
                "https://mirror.bazel.build/aka.ms/download-jdk/microsoft-jdk-11.0.13.8.1-windows-aarch64.zip"
              ]
            }
          },
          "remotejdk21_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "148006a220a18922d7a9c52ac0bad099c5b4e60334a8d02b11f8c945e9ec9a34",
              "strip_prefix": "zulu21.34.19-ca-jdk21.0.3-macosx_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-macosx_x64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk17_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remote_jdk8_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 8,\n)\n",
              "sha256": "82c46c65d57e187ef68fdd125ef760eaeb52ebfe1be1a6a251cf5b43cbebc78a",
              "strip_prefix": "zulu8.78.0.19-ca-jdk8.0.412-linux_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-linux_aarch64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu8.78.0.19-ca-jdk8.0.412-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk21_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "ca763d1308a6bcc768382f160733a08e591d5f595a7dd9e51b60d27d54828dcc",
              "strip_prefix": "zulu21.34.19-ca-jdk21.0.3-linux_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-linux_x64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-linux_x64.tar.gz"
              ]
            }
          },
          "remote_java_tools_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_java_tools_linux",
              "sha256": "e480906978b34d1f15fa958699112872c7b5883a3d48b630b6bed574d86523ca",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.8/java_tools_linux-v13.8.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.8/java_tools_linux-v13.8.zip"
              ]
            }
          },
          "remotejdk21_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "fb9f0dc6a484b0b169b3b3a3c2425d5f62bebfd15cb06c1597e33f77959c72af",
              "strip_prefix": "zulu21.34.19-ca-jdk21.0.3-win_x64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-win_x64.zip",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-win_x64.zip"
              ]
            }
          },
          "remotejdk21_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "c898d4ce365c8926e22859c06be4a81bafb9fd0126088867e15a528fe99b1599",
              "strip_prefix": "zulu21.34.19-ca-jdk21.0.3-linux_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-linux_aarch64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a58fc0361966af0a5d5a31a2d8a208e3c9bb0f54f345596fd80b99ea9a39788b",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz",
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk17_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "518cc455c0c7b49c0ae7d809c0bb87ab371bb850d46abb8efad5010c6a06faec",
              "strip_prefix": "zulu17.50.19-ca-jdk17.0.11-linux_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-linux_aarch64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.50.19-ca-jdk17.0.11-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk21_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "0d5676c50821e0d0b951bf3ffd717e7a13be2a89d8848a5c13b4aedc6f982c78",
              "strip_prefix": "jdk-21.0.2+13",
              "urls": [
                "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.2+13/OpenJDK21U-jdk_s390x_linux_hotspot_21.0.2_13.tar.gz",
                "https://mirror.bazel.build/github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.2+13/OpenJDK21U-jdk_s390x_linux_hotspot_21.0.2_13.tar.gz"
              ]
            }
          },
          "remotejdk21_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_win_arm64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "975603e684f2ec5a525b3b5336d6aa0b09b5b7d2d0d9e271bd6a9892ad550181",
              "strip_prefix": "jdk-21+35",
              "urls": [
                "https://aka.ms/download-jdk/microsoft-jdk-21.0.0-windows-aarch64.zip",
                "https://mirror.bazel.build/aka.ms/download-jdk/microsoft-jdk-21.0.0-windows-aarch64.zip"
              ]
            }
          },
          "remotejdk17_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_linux_ppc64le_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remote_java_tools_darwin_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_java_tools_darwin_arm64",
              "sha256": "7a4bf783c67db892e3e670d61c194a0595df8f151c0684146ec7bcf2057a6500",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.8/java_tools_darwin_arm64-v13.8.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.8/java_tools_darwin_arm64-v13.8.zip"
              ]
            }
          },
          "remotejdk21_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_linux_ppc64le_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remotejdk21_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_win_arm64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\n"
            }
          },
          "remote_jdk8_windows_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remote_jdk8_windows_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_8\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"8\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_windows//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remote_jdk8_windows//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk17_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "ffacba69c6843d7ca70d572489d6cc7ab7ae52c60f0852cedf4cf0d248b6fc37",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1+1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1+1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "40fb1918385e03814b67b7608c908c7f945ccbeddbbf5ed062cdfb2602e21c83",
              "strip_prefix": "zulu11.72.19-ca-jdk11.0.23-macosx_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-macosx_aarch64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.72.19-ca-jdk11.0.23-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk11_linux_ppc64le",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n\nfilegroup(\n    name = \"jdk-jmods\",\n    srcs = glob(\n        [\"jmods/**\"],\n        allow_empty = True,\n    ),\n)\n\njava_runtime(\n    name = \"jdk-with-jmods\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jdk-jmods\",\n        \":jre\",\n    ],\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a8fba686f6eb8ae1d1a9566821dbd5a85a1108b96ad857fdbac5c1e4649fc56f",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz",
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk21_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.11.1//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.11.1~toolchains~remotejdk21_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@rules_java//toolchains:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\n"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~1.11.0",
            "bazel_features_globals",
            "bazel_features~1.11.0~version_extension~bazel_features_globals"
          ],
          [
            "bazel_features~1.11.0",
            "bazel_features_version",
            "bazel_features~1.11.0~version_extension~bazel_features_version"
          ],
          [
            "rules_java~7.11.1",
            "bazel_features",
            "bazel_features~1.11.0"
          ],
          [
            "rules_java~7.11.1",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_java~7.11.1",
            "remote_java_tools",
            "rules_java~7.11.1~toolchains~remote_java_tools"
          ]
        ]
      }
    },
    "@@rules_nodejs~5.8.2//nodejs:extensions.bzl%node": {
      "general": {
        "bzlTransitiveDigest": "w4hFW9j1sSqbD5Xh/6OyqDeCDqSP37/NuSrjHrLMXsI=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "nodejs_host": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs/private:nodejs_repo_host_os_alias.bzl",
            "ruleClassName": "nodejs_repo_host_os_alias",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs_host",
              "user_node_repository_name": "nodejs"
            }
          },
          "nodejs_linux_s390x": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs:repositories.bzl",
            "ruleClassName": "node_repositories",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs_linux_s390x",
              "platform": "linux_s390x",
              "node_version": "16.19.0"
            }
          },
          "nodejs_windows_amd64": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs:repositories.bzl",
            "ruleClassName": "node_repositories",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs_windows_amd64",
              "platform": "windows_amd64",
              "node_version": "16.19.0"
            }
          },
          "nodejs_toolchains": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs/private:toolchains_repo.bzl",
            "ruleClassName": "toolchains_repo",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs_toolchains",
              "user_node_repository_name": "nodejs"
            }
          },
          "nodejs_linux_amd64": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs:repositories.bzl",
            "ruleClassName": "node_repositories",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs_linux_amd64",
              "platform": "linux_amd64",
              "node_version": "16.19.0"
            }
          },
          "nodejs_linux_ppc64le": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs:repositories.bzl",
            "ruleClassName": "node_repositories",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs_linux_ppc64le",
              "platform": "linux_ppc64le",
              "node_version": "16.19.0"
            }
          },
          "nodejs_darwin_amd64": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs:repositories.bzl",
            "ruleClassName": "node_repositories",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs_darwin_amd64",
              "platform": "darwin_amd64",
              "node_version": "16.19.0"
            }
          },
          "nodejs_linux_arm64": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs:repositories.bzl",
            "ruleClassName": "node_repositories",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs_linux_arm64",
              "platform": "linux_arm64",
              "node_version": "16.19.0"
            }
          },
          "nodejs": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs/private:nodejs_repo_host_os_alias.bzl",
            "ruleClassName": "nodejs_repo_host_os_alias",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs",
              "user_node_repository_name": "nodejs"
            }
          },
          "nodejs_darwin_arm64": {
            "bzlFile": "@@rules_nodejs~5.8.2//nodejs:repositories.bzl",
            "ruleClassName": "node_repositories",
            "attributes": {
              "name": "rules_nodejs~5.8.2~node~nodejs_darwin_arm64",
              "platform": "darwin_arm64",
              "node_version": "16.19.0"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_nodejs~5.8.2",
            "bazel_skylib",
            "bazel_skylib~1.7.1"
          ],
          [
            "rules_nodejs~5.8.2",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_oci~2.0.0//oci:extensions.bzl%oci": {
      "general": {
        "bzlTransitiveDigest": "zF2F3MLA21l3KKy3Gx5XfimvV8o4Y4vzwGMm4IZEYT0=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "pebble_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~pebble_linux_amd64",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "letsencrypt/pebble",
              "identifier": "sha256:fc5a537bf8fbc7cc63aa24ec3142283aa9b6ba54529f86eb8ff31fbde7c5b258",
              "platform": "linux/amd64",
              "target_name": "pebble_linux_amd64",
              "bazel_tags": []
            }
          },
          "rust_base_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~rust_base_linux_amd64",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/cc-debian11",
              "identifier": "sha256:8e94f031353596c3fc9db6a2499bcc82dacc40cb71e0703476f9fad41677efdf",
              "platform": "linux/amd64",
              "target_name": "rust_base_linux_amd64",
              "bazel_tags": []
            }
          },
          "bazel_features_version": {
            "bzlFile": "@@bazel_features~1.11.0//private:version_repo.bzl",
            "ruleClassName": "version_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bazel_features_version"
            }
          },
          "copy_to_directory_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~copy_to_directory_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "jq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~jq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "1.7"
            }
          },
          "copy_to_directory_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~copy_to_directory_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "minica": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~minica",
              "target_name": "minica",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "ryantk/minica",
              "identifier": "sha256:c67e2c1885d438b5927176295d41aaab8a72dd9e1272ba85054bfc78191d05b0",
              "platforms": {
                "@@platforms//cpu:x86_64": "@minica_linux_amd64"
              },
              "bzlmod_repository": "minica",
              "reproducible": true
            }
          },
          "oci_crane_linux_arm64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_linux_arm64",
              "platform": "linux_arm64",
              "crane_version": "v0.18.0"
            }
          },
          "jq_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~jq_linux_arm64",
              "platform": "linux_arm64",
              "version": "1.7"
            }
          },
          "coreutils_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~coreutils_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "0.0.27"
            }
          },
          "python3": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~python3",
              "target_name": "python3",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "library/python",
              "identifier": "sha256:0a56f24afa1fc7f518aa690cb8c7be661225e40b157d9bb8c6ef402164d9faa7",
              "platforms": {
                "@@platforms//cpu:x86_64": "@python3_linux_amd64"
              },
              "bzlmod_repository": "python3",
              "reproducible": true
            }
          },
          "bsd_tar_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bsd_tar_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "copy_to_directory_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~copy_to_directory_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "oci_regctl_toolchains": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:toolchains_repo.bzl",
            "ruleClassName": "toolchains_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_toolchains",
              "toolchain_type": "@rules_oci//oci:regctl_toolchain_type",
              "toolchain": "@oci_regctl_{platform}//:regctl_toolchain"
            }
          },
          "oci_regctl_windows_armv6": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "regctl_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_windows_armv6",
              "platform": "windows_armv6"
            }
          },
          "oci_crane_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_linux_amd64",
              "platform": "linux_amd64",
              "crane_version": "v0.18.0"
            }
          },
          "coreutils_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~coreutils_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "0.0.27"
            }
          },
          "coreutils_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~coreutils_linux_arm64",
              "platform": "linux_arm64",
              "version": "0.0.27"
            }
          },
          "zstd_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_binary_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~zstd_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "oci_crane_darwin_arm64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_darwin_arm64",
              "platform": "darwin_arm64",
              "crane_version": "v0.18.0"
            }
          },
          "jq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~jq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "1.7"
            }
          },
          "oci_regctl_linux_s390x": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "regctl_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_linux_s390x",
              "platform": "linux_s390x"
            }
          },
          "oci_regctl_darwin_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "regctl_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "oci_crane_linux_i386": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_linux_i386",
              "platform": "linux_i386",
              "crane_version": "v0.18.0"
            }
          },
          "ubuntu_base": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~ubuntu_base",
              "target_name": "ubuntu_base",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "library/ubuntu",
              "identifier": "sha256:965fbcae990b0467ed5657caceaec165018ef44a4d2d46c7cdea80a9dff0d1ea",
              "platforms": {
                "@@platforms//cpu:x86_64": "@ubuntu_base_linux_amd64"
              },
              "bzlmod_repository": "ubuntu_base",
              "reproducible": true
            }
          },
          "static-file-server_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~static-file-server_linux_amd64",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "dfinitydev/halverneus-static-file-server",
              "identifier": "sha256:80eb204716e0928e27e378ed817056c1167b2b1a878b1ac4ce496964dd9a3ccd",
              "platform": "linux/amd64",
              "target_name": "static-file-server_linux_amd64",
              "bazel_tags": []
            }
          },
          "ubuntu_base_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~ubuntu_base_linux_amd64",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "library/ubuntu",
              "identifier": "sha256:965fbcae990b0467ed5657caceaec165018ef44a4d2d46c7cdea80a9dff0d1ea",
              "platform": "linux/amd64",
              "target_name": "ubuntu_base_linux_amd64",
              "bazel_tags": []
            }
          },
          "static-file-server": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~static-file-server",
              "target_name": "static-file-server",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "dfinitydev/halverneus-static-file-server",
              "identifier": "sha256:80eb204716e0928e27e378ed817056c1167b2b1a878b1ac4ce496964dd9a3ccd",
              "platforms": {
                "@@platforms//cpu:x86_64": "@static-file-server_linux_amd64"
              },
              "bzlmod_repository": "static-file-server",
              "reproducible": true
            }
          },
          "oci_regctl_windows_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "regctl_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "python3_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~python3_linux_amd64",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "library/python",
              "identifier": "sha256:0a56f24afa1fc7f518aa690cb8c7be661225e40b157d9bb8c6ef402164d9faa7",
              "platform": "linux/amd64",
              "target_name": "python3_linux_amd64",
              "bazel_tags": []
            }
          },
          "oci_crane_windows_armv6": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_windows_armv6",
              "platform": "windows_armv6",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_toolchains": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:toolchains_repo.bzl",
            "ruleClassName": "toolchains_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_toolchains",
              "toolchain_type": "@rules_oci//oci:crane_toolchain_type",
              "toolchain": "@oci_crane_{platform}//:crane_toolchain"
            }
          },
          "copy_to_directory_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~copy_to_directory_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "zstd_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_binary_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~zstd_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "bsd_tar_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bsd_tar_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "oci_crane_windows_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_windows_amd64",
              "platform": "windows_amd64",
              "crane_version": "v0.18.0"
            }
          },
          "oci_regctl_linux_arm64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "regctl_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "oci_crane_linux_s390x": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_linux_s390x",
              "platform": "linux_s390x",
              "crane_version": "v0.18.0"
            }
          },
          "zstd_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_binary_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~zstd_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "bitcoind": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bitcoind",
              "target_name": "bitcoind",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "kylemanna/bitcoind",
              "identifier": "sha256:17c7dd21690f3be34630db7389d2f0bff14649e27a964afef03806a6d631e0f1",
              "platforms": {
                "@@platforms//cpu:x86_64": "@bitcoind_linux_amd64"
              },
              "bzlmod_repository": "bitcoind",
              "reproducible": true
            }
          },
          "oci_regctl_darwin_arm64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "regctl_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "coredns": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~coredns",
              "target_name": "coredns",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "coredns/coredns",
              "identifier": "sha256:be7652ce0b43b1339f3d14d9b14af9f588578011092c1f7893bd55432d83a378",
              "platforms": {
                "@@platforms//cpu:x86_64": "@coredns_linux_amd64"
              },
              "bzlmod_repository": "coredns",
              "reproducible": true
            }
          },
          "bsd_tar_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bsd_tar_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "jq": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_host_alias_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~jq"
            }
          },
          "oci_crane_darwin_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_darwin_amd64",
              "platform": "darwin_amd64",
              "crane_version": "v0.18.0"
            }
          },
          "coredns_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~coredns_linux_amd64",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "coredns/coredns",
              "identifier": "sha256:be7652ce0b43b1339f3d14d9b14af9f588578011092c1f7893bd55432d83a378",
              "platform": "linux/amd64",
              "target_name": "coredns_linux_amd64",
              "bazel_tags": []
            }
          },
          "bsd_tar_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bsd_tar_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "copy_to_directory_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~copy_to_directory_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "coreutils_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~coreutils_linux_amd64",
              "platform": "linux_amd64",
              "version": "0.0.27"
            }
          },
          "bazel_skylib": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bazel_skylib",
              "sha256": "9f38886a40548c6e96c106b752f242130ee11aaa068a56ba7e56f4511f33e4f2",
              "urls": [
                "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.6.1/bazel-skylib-1.6.1.tar.gz",
                "https://github.com/bazelbuild/bazel-skylib/releases/download/1.6.1/bazel-skylib-1.6.1.tar.gz"
              ]
            }
          },
          "oci_crane_linux_armv6": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_crane_linux_armv6",
              "platform": "linux_armv6",
              "crane_version": "v0.18.0"
            }
          },
          "copy_to_directory_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~copy_to_directory_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "coreutils_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_toolchains_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~coreutils_toolchains",
              "user_repository_name": "coreutils"
            }
          },
          "zstd_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_binary_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~zstd_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "zstd_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:zstd_toolchain.bzl",
            "ruleClassName": "zstd_toolchains_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~zstd_toolchains",
              "user_repository_name": "zstd"
            }
          },
          "rust_base": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~rust_base",
              "target_name": "rust_base",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/cc-debian11",
              "identifier": "sha256:8e94f031353596c3fc9db6a2499bcc82dacc40cb71e0703476f9fad41677efdf",
              "platforms": {
                "@@platforms//cpu:x86_64": "@rust_base_linux_amd64"
              },
              "bzlmod_repository": "rust_base",
              "reproducible": true
            }
          },
          "jq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~jq_linux_amd64",
              "platform": "linux_amd64",
              "version": "1.7"
            }
          },
          "bsd_tar_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bsd_tar_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "oci_regctl_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "regctl_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "minica_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~minica_linux_amd64",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "ryantk/minica",
              "identifier": "sha256:c67e2c1885d438b5927176295d41aaab8a72dd9e1272ba85054bfc78191d05b0",
              "platform": "linux/amd64",
              "target_name": "minica_linux_amd64",
              "bazel_tags": []
            }
          },
          "bsd_tar_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "tar_toolchains_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bsd_tar_toolchains",
              "user_repository_name": "bsd_tar"
            }
          },
          "jaeger_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~jaeger_linux_amd64",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "dfinitydev/jaegertracing-all-in-one",
              "identifier": "sha256:b85a6bbb949a62377010b8418d7a860c9d0ea7058d83e7cb5ade4fba046c4a76",
              "platform": "linux/amd64",
              "target_name": "jaeger_linux_amd64",
              "bazel_tags": []
            }
          },
          "jaeger": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~jaeger",
              "target_name": "jaeger",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "dfinitydev/jaegertracing-all-in-one",
              "identifier": "sha256:b85a6bbb949a62377010b8418d7a860c9d0ea7058d83e7cb5ade4fba046c4a76",
              "platforms": {
                "@@platforms//cpu:x86_64": "@jaeger_linux_amd64"
              },
              "bzlmod_repository": "jaeger",
              "reproducible": true
            }
          },
          "alpine_openssl_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~alpine_openssl_linux_amd64",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "alpine/openssl",
              "identifier": "sha256:cf89651f07a33d2faf4499f72e6f8b0ee2542cd40735d51c7e75b8965c17af0e",
              "platform": "linux/amd64",
              "target_name": "alpine_openssl_linux_amd64",
              "bazel_tags": []
            }
          },
          "jq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~jq_windows_amd64",
              "platform": "windows_amd64",
              "version": "1.7"
            }
          },
          "pebble": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~pebble",
              "target_name": "pebble",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "letsencrypt/pebble",
              "identifier": "sha256:fc5a537bf8fbc7cc63aa24ec3142283aa9b6ba54529f86eb8ff31fbde7c5b258",
              "platforms": {
                "@@platforms//cpu:x86_64": "@pebble_linux_amd64"
              },
              "bzlmod_repository": "pebble",
              "reproducible": true
            }
          },
          "oci_regctl_linux_i386": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "regctl_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_linux_i386",
              "platform": "linux_i386"
            }
          },
          "jq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_toolchains_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~jq_toolchains",
              "user_repository_name": "jq"
            }
          },
          "copy_to_directory_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_toolchains_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~copy_to_directory_toolchains",
              "user_repository_name": "copy_to_directory"
            }
          },
          "oci_regctl_linux_armv6": {
            "bzlFile": "@@rules_oci~2.0.0//oci:repositories.bzl",
            "ruleClassName": "regctl_repositories",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~oci_regctl_linux_armv6",
              "platform": "linux_armv6"
            }
          },
          "bitcoind_linux_amd64": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bitcoind_linux_amd64",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "kylemanna/bitcoind",
              "identifier": "sha256:17c7dd21690f3be34630db7389d2f0bff14649e27a964afef03806a6d631e0f1",
              "platform": "linux/amd64",
              "target_name": "bitcoind_linux_amd64",
              "bazel_tags": []
            }
          },
          "alpine_openssl": {
            "bzlFile": "@@rules_oci~2.0.0//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~alpine_openssl",
              "target_name": "alpine_openssl",
              "scheme": "https",
              "registry": "index.docker.io",
              "repository": "alpine/openssl",
              "identifier": "sha256:cf89651f07a33d2faf4499f72e6f8b0ee2542cd40735d51c7e75b8965c17af0e",
              "platforms": {
                "@@platforms//cpu:x86_64": "@alpine_openssl_linux_amd64"
              },
              "bzlmod_repository": "alpine_openssl",
              "reproducible": true
            }
          },
          "bazel_features_globals": {
            "bzlFile": "@@bazel_features~1.11.0//private:globals_repo.bzl",
            "ruleClassName": "globals_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~bazel_features_globals",
              "globals": {
                "RunEnvironmentInfo": "5.3.0",
                "DefaultInfo": "0.0.1",
                "__TestingOnly_NeverAvailable": "1000000000.0.0"
              }
            }
          },
          "coreutils_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.9.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~2.0.0~oci~coreutils_windows_amd64",
              "platform": "windows_amd64",
              "version": "0.0.27"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "static-file-server",
            "static-file-server_linux_amd64",
            "bitcoind",
            "bitcoind_linux_amd64",
            "jaeger",
            "jaeger_linux_amd64",
            "minica",
            "minica_linux_amd64",
            "rust_base",
            "rust_base_linux_amd64",
            "ubuntu_base",
            "ubuntu_base_linux_amd64",
            "coredns",
            "coredns_linux_amd64",
            "pebble",
            "pebble_linux_amd64",
            "python3",
            "python3_linux_amd64",
            "alpine_openssl",
            "alpine_openssl_linux_amd64"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO"
        },
        "recordedRepoMappingEntries": [
          [
            "aspect_bazel_lib~2.9.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "bazel_features~1.11.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_oci~2.0.0",
            "aspect_bazel_lib",
            "aspect_bazel_lib~2.9.0"
          ],
          [
            "rules_oci~2.0.0",
            "bazel_features",
            "bazel_features~1.11.0"
          ],
          [
            "rules_oci~2.0.0",
            "bazel_skylib",
            "bazel_skylib~1.7.1"
          ]
        ]
      }
    },
    "@@rules_python~0.35.0//python/extensions:python.bzl%python": {
      "general": {
        "bzlTransitiveDigest": "q8odO0RgvBrr6GTTaFGuuvMmNreOUsZRFLGEBW28WME=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "python_3_11_s390x-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_11_s390x-unknown-linux-gnu",
              "sha256": "e69b66e53e926460df044f44846eef3fea642f630e829719e1a4112fc370dc56",
              "patches": [],
              "platform": "s390x-unknown-linux-gnu",
              "python_version": "3.11.9",
              "release_filename": "20240726/cpython-3.11.9+20240726-s390x-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.11.9+20240726-s390x-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_8_aarch64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_8_aarch64-apple-darwin",
              "sha256": "fe4af1b6bc59478d027ede43f6249cf7b9143558e171bdf8711247337623af57",
              "patches": [],
              "platform": "aarch64-apple-darwin",
              "python_version": "3.8.19",
              "release_filename": "20240726/cpython-3.8.19+20240726-aarch64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.8.19+20240726-aarch64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_10_aarch64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_10_aarch64-apple-darwin",
              "sha256": "164d89f0df2feb689981864ecc1dffb19e6aa3696c8880166de555494fe92607",
              "patches": [],
              "platform": "aarch64-apple-darwin",
              "python_version": "3.10.14",
              "release_filename": "20240726/cpython-3.10.14+20240726-aarch64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.10.14+20240726-aarch64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_10_x86_64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_10_x86_64-apple-darwin",
              "sha256": "1a1455838cd1e8ed0da14a152a2d559a2fd3a6047ba7013e841db4a35a228c1d",
              "patches": [],
              "platform": "x86_64-apple-darwin",
              "python_version": "3.10.14",
              "release_filename": "20240726/cpython-3.10.14+20240726-x86_64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.10.14+20240726-x86_64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11_aarch64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_11_aarch64-unknown-linux-gnu",
              "sha256": "4d17cf988abe24449d649aad3ef974091ab76807904d41839907061925b4c9e3",
              "patches": [],
              "platform": "aarch64-unknown-linux-gnu",
              "python_version": "3.11.9",
              "release_filename": "20240726/cpython-3.11.9+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.11.9+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_10_ppc64le-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_10_ppc64le-unknown-linux-gnu",
              "sha256": "549d38b9ef59cba9ab2990025255231bfa1cb32b4bc5eac321667640fdee19d1",
              "patches": [],
              "platform": "ppc64le-unknown-linux-gnu",
              "python_version": "3.10.14",
              "release_filename": "20240726/cpython-3.10.14+20240726-ppc64le-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.10.14+20240726-ppc64le-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_10_x86_64-pc-windows-msvc": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_10_x86_64-pc-windows-msvc",
              "sha256": "7f68821a8b5445267eca480660364ebd06ec84632b336770c6e39de07ac0f6c3",
              "patches": [],
              "platform": "x86_64-pc-windows-msvc",
              "python_version": "3.10.14",
              "release_filename": "20240726/cpython-3.10.14+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.10.14+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "pythons_hub": {
            "bzlFile": "@@rules_python~0.35.0//python/private:pythons_hub.bzl",
            "ruleClassName": "hub_repo",
            "attributes": {
              "name": "rules_python~0.35.0~python~pythons_hub",
              "default_python_version": "3.10",
              "toolchain_prefixes": [
                "_0000_python_3_11_",
                "_0001_python_3_8_",
                "_0002_python_3_9_",
                "_0003_python_3_12_",
                "_0004_python_3_10_"
              ],
              "toolchain_python_versions": [
                "3.11",
                "3.8",
                "3.9",
                "3.12",
                "3.10"
              ],
              "toolchain_set_python_version_constraints": [
                "True",
                "True",
                "True",
                "True",
                "False"
              ],
              "toolchain_user_repository_names": [
                "python_3_11",
                "python_3_8",
                "python_3_9",
                "python_3_12",
                "python_3_10"
              ]
            }
          },
          "python_3_12_x86_64-pc-windows-msvc": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_12_x86_64-pc-windows-msvc",
              "sha256": "74309b0f322716409883d38c621743ea7fa0376eb00927b8ee1e1671d3aff450",
              "patches": [],
              "platform": "x86_64-pc-windows-msvc",
              "python_version": "3.12.4",
              "release_filename": "20240726/cpython-3.12.4+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.12.4+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_12_x86_64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_12_x86_64-unknown-linux-gnu",
              "sha256": "e133dd6fc6a2d0033e2658637cc22e9c95f9d7073b80115037ee1f16417a54ac",
              "patches": [],
              "platform": "x86_64-unknown-linux-gnu",
              "python_version": "3.12.4",
              "release_filename": "20240726/cpython-3.12.4+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.12.4+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_9_host": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "host_toolchain",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_9_host",
              "python_version": "3.9.19",
              "user_repository_name": "python_3_9",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "ppc64le-unknown-linux-gnu",
                "s390x-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_12_aarch64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_12_aarch64-apple-darwin",
              "sha256": "1801025e825c04b3907e4ef6220a13607bc0397628c9485897073110ef7fde15",
              "patches": [],
              "platform": "aarch64-apple-darwin",
              "python_version": "3.12.4",
              "release_filename": "20240726/cpython-3.12.4+20240726-aarch64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.12.4+20240726-aarch64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_8_x86_64-pc-windows-msvc": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_8_x86_64-pc-windows-msvc",
              "sha256": "4e8e9ddda82062d6e111108ab72f439acac4ba41b77d694548ef5dbf6b2b3319",
              "patches": [],
              "platform": "x86_64-pc-windows-msvc",
              "python_version": "3.8.19",
              "release_filename": "20240726/cpython-3.8.19+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.8.19+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_9_ppc64le-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_9_ppc64le-unknown-linux-gnu",
              "sha256": "bfff0e3d536b2f0c315e85926cc317b7b756701b6de781a8972cefbdbc991ca2",
              "patches": [],
              "platform": "ppc64le-unknown-linux-gnu",
              "python_version": "3.9.19",
              "release_filename": "20240726/cpython-3.9.19+20240726-ppc64le-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.9.19+20240726-ppc64le-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_12_s390x-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_12_s390x-unknown-linux-gnu",
              "sha256": "8f8f3e29cf0c2facdbcfee70660939fda7667ac24fee8656d3388fc72f3acc7c",
              "patches": [],
              "platform": "s390x-unknown-linux-gnu",
              "python_version": "3.12.4",
              "release_filename": "20240726/cpython-3.12.4+20240726-s390x-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.12.4+20240726-s390x-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_12_aarch64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_12_aarch64-unknown-linux-gnu",
              "sha256": "a098b18b7e9fea0c66867b76c0124fce9465765017572b2e7b522154c87c78d7",
              "patches": [],
              "platform": "aarch64-unknown-linux-gnu",
              "python_version": "3.12.4",
              "release_filename": "20240726/cpython-3.12.4+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.12.4+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11_ppc64le-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_11_ppc64le-unknown-linux-gnu",
              "sha256": "fc4f3c9ef9bfac2ed0282126ff376e544697ad04a5408d6429d46899d7d3bf21",
              "patches": [],
              "platform": "ppc64le-unknown-linux-gnu",
              "python_version": "3.11.9",
              "release_filename": "20240726/cpython-3.11.9+20240726-ppc64le-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.11.9+20240726-ppc64le-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_9_x86_64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_9_x86_64-unknown-linux-gnu",
              "sha256": "cbf94cb1c9d4b5501d9b3652f6e8400c2cab7c41dfea48d344d9e7f29692b91b",
              "patches": [],
              "platform": "x86_64-unknown-linux-gnu",
              "python_version": "3.9.19",
              "release_filename": "20240726/cpython-3.9.19+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.9.19+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_12_host": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "host_toolchain",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_12_host",
              "python_version": "3.12.4",
              "user_repository_name": "python_3_12",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "ppc64le-unknown-linux-gnu",
                "s390x-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_9_s390x-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_9_s390x-unknown-linux-gnu",
              "sha256": "059ec97080b205ea5f1ddf71c18e22b691e8d68192bd37d13ad8f4359915299d",
              "patches": [],
              "platform": "s390x-unknown-linux-gnu",
              "python_version": "3.9.19",
              "release_filename": "20240726/cpython-3.9.19+20240726-s390x-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.9.19+20240726-s390x-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_8_x86_64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_8_x86_64-unknown-linux-gnu",
              "sha256": "e81ea4dd16e6057c8121bdbcb7b64e2956068ca019f244c814bc3ad907cb2765",
              "patches": [],
              "platform": "x86_64-unknown-linux-gnu",
              "python_version": "3.8.19",
              "release_filename": "20240726/cpython-3.8.19+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.8.19+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_8_host": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "host_toolchain",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_8_host",
              "python_version": "3.8.19",
              "user_repository_name": "python_3_8",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_11_host": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "host_toolchain",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_11_host",
              "python_version": "3.11.9",
              "user_repository_name": "python_3_11",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "ppc64le-unknown-linux-gnu",
                "s390x-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_11_aarch64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_11_aarch64-apple-darwin",
              "sha256": "cbdac9462bab9671c8e84650e425d3f43b775752a930a2ef954a0d457d5c00c3",
              "patches": [],
              "platform": "aarch64-apple-darwin",
              "python_version": "3.11.9",
              "release_filename": "20240726/cpython-3.11.9+20240726-aarch64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.11.9+20240726-aarch64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_9": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_9",
              "python_version": "3.9.19",
              "user_repository_name": "python_3_9",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "ppc64le-unknown-linux-gnu",
                "s390x-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_11_x86_64-pc-windows-msvc": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_11_x86_64-pc-windows-msvc",
              "sha256": "f694be48bdfec1dace6d69a19906b6083f4dd7c7c61f1138ba520e433e5598f8",
              "patches": [],
              "platform": "x86_64-pc-windows-msvc",
              "python_version": "3.11.9",
              "release_filename": "20240726/cpython-3.11.9+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.11.9+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_8_aarch64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_8_aarch64-unknown-linux-gnu",
              "sha256": "8dc598aca7ad43ea20119324af98862d198d8990151c734a69f0fc9d16384b46",
              "patches": [],
              "platform": "aarch64-unknown-linux-gnu",
              "python_version": "3.8.19",
              "release_filename": "20240726/cpython-3.8.19+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.8.19+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_8": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_8",
              "python_version": "3.8.19",
              "user_repository_name": "python_3_8",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_9_aarch64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_9_aarch64-apple-darwin",
              "sha256": "0e5a7aae57c53d7a849bc7f67764a947b626e3fe8d4d41a8eed11d9e4be0b1c6",
              "patches": [],
              "platform": "aarch64-apple-darwin",
              "python_version": "3.9.19",
              "release_filename": "20240726/cpython-3.9.19+20240726-aarch64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.9.19+20240726-aarch64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_8_x86_64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_8_x86_64-apple-darwin",
              "sha256": "4bc990b35384c83b5b0b3071e91455ec203517e569f29f691b159f1a6b2a19b2",
              "patches": [],
              "platform": "x86_64-apple-darwin",
              "python_version": "3.8.19",
              "release_filename": "20240726/cpython-3.8.19+20240726-x86_64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.8.19+20240726-x86_64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_9_x86_64-pc-windows-msvc": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_9_x86_64-pc-windows-msvc",
              "sha256": "a8df6a00140055c9accb0be632e7add951d587bbe3d63c40827bbd5145d8f557",
              "patches": [],
              "platform": "x86_64-pc-windows-msvc",
              "python_version": "3.9.19",
              "release_filename": "20240726/cpython-3.9.19+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.9.19+20240726-x86_64-pc-windows-msvc-shared-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_12": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_12",
              "python_version": "3.12.4",
              "user_repository_name": "python_3_12",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "ppc64le-unknown-linux-gnu",
                "s390x-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_12_x86_64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_12_x86_64-apple-darwin",
              "sha256": "4c325838c1b0ed13698506fcd515be25c73dcbe195f8522cf98f9148a97601ed",
              "patches": [],
              "platform": "x86_64-apple-darwin",
              "python_version": "3.12.4",
              "release_filename": "20240726/cpython-3.12.4+20240726-x86_64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.12.4+20240726-x86_64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_9_aarch64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_9_aarch64-unknown-linux-gnu",
              "sha256": "05ec896db9a9d4fe8004b4e4b6a6fdc588a015fedbddb475490885b0d9c7d9b3",
              "patches": [],
              "platform": "aarch64-unknown-linux-gnu",
              "python_version": "3.9.19",
              "release_filename": "20240726/cpython-3.9.19+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.9.19+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_10_aarch64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_10_aarch64-unknown-linux-gnu",
              "sha256": "39bcd46b4d70e40da177c55259be16d5c2be7a3f7f93f1e3bde47e71b4833f29",
              "patches": [],
              "platform": "aarch64-unknown-linux-gnu",
              "python_version": "3.10.14",
              "release_filename": "20240726/cpython-3.10.14+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.10.14+20240726-aarch64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_11",
              "python_version": "3.11.9",
              "user_repository_name": "python_3_11",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "ppc64le-unknown-linux-gnu",
                "s390x-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_10_s390x-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_10_s390x-unknown-linux-gnu",
              "sha256": "de4bc878a8666c734f983db971610980870148f333bda8b0c34abfaeae88d7ec",
              "patches": [],
              "platform": "s390x-unknown-linux-gnu",
              "python_version": "3.10.14",
              "release_filename": "20240726/cpython-3.10.14+20240726-s390x-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.10.14+20240726-s390x-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_10": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_10",
              "python_version": "3.10.14",
              "user_repository_name": "python_3_10",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "ppc64le-unknown-linux-gnu",
                "s390x-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_11_x86_64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_11_x86_64-apple-darwin",
              "sha256": "dc3174666a30f4c38d04e79a80c3159b4b3aa69597c4676701c8386696811611",
              "patches": [],
              "platform": "x86_64-apple-darwin",
              "python_version": "3.11.9",
              "release_filename": "20240726/cpython-3.11.9+20240726-x86_64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.11.9+20240726-x86_64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_versions": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "multi_toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_versions",
              "python_versions": {
                "3.10": "python_3_10",
                "3.11": "python_3_11",
                "3.8": "python_3_8",
                "3.9": "python_3_9",
                "3.12": "python_3_12"
              }
            }
          },
          "python_3_10_x86_64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_10_x86_64-unknown-linux-gnu",
              "sha256": "32b34cd13d9d745b3db3f3b8398ab2c07de74544829915dbebd8dce39bdc405e",
              "patches": [],
              "platform": "x86_64-unknown-linux-gnu",
              "python_version": "3.10.14",
              "release_filename": "20240726/cpython-3.10.14+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.10.14+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_9_x86_64-apple-darwin": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_9_x86_64-apple-darwin",
              "sha256": "f2ae9fcac044a329739b8c1676245e8cb6b3094416220e71823d2673bdea0bdb",
              "patches": [],
              "platform": "x86_64-apple-darwin",
              "python_version": "3.9.19",
              "release_filename": "20240726/cpython-3.9.19+20240726-x86_64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.9.19+20240726-x86_64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_12_ppc64le-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_12_ppc64le-unknown-linux-gnu",
              "sha256": "04011c4c5b7fe34b0b895edf4ad8748e410686c1d69aaee11d6688d481023bcb",
              "patches": [],
              "platform": "ppc64le-unknown-linux-gnu",
              "python_version": "3.12.4",
              "release_filename": "20240726/cpython-3.12.4+20240726-ppc64le-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.12.4+20240726-ppc64le-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_10_host": {
            "bzlFile": "@@rules_python~0.35.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "host_toolchain",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_10_host",
              "python_version": "3.10.14",
              "user_repository_name": "python_3_10",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "ppc64le-unknown-linux-gnu",
                "s390x-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_11_x86_64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.35.0//python/private:python_repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.35.0~python~python_3_11_x86_64-unknown-linux-gnu",
              "sha256": "f6e955dc9ddfcad74e77abe6f439dac48ebca14b101ed7c85a5bf3206ed2c53d",
              "patches": [],
              "platform": "x86_64-unknown-linux-gnu",
              "python_version": "3.11.9",
              "release_filename": "20240726/cpython-3.11.9+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20240726/cpython-3.11.9+20240726-x86_64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~1.11.0",
            "bazel_features_globals",
            "bazel_features~1.11.0~version_extension~bazel_features_globals"
          ],
          [
            "bazel_features~1.11.0",
            "bazel_features_version",
            "bazel_features~1.11.0~version_extension~bazel_features_version"
          ],
          [
            "rules_python~0.35.0",
            "bazel_features",
            "bazel_features~1.11.0"
          ],
          [
            "rules_python~0.35.0",
            "bazel_skylib",
            "bazel_skylib~1.7.1"
          ],
          [
            "rules_python~0.35.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_python~0.35.0//python/private:internal_deps.bzl%internal_deps": {
      "general": {
        "bzlTransitiveDigest": "9ZGq59KkwA3X9FvDDSORvMipUFa3m1+McuIQI/wBX4M=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "pypi__wheel": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__wheel",
              "url": "https://files.pythonhosted.org/packages/7d/cd/d7460c9a869b16c3dd4e1e403cce337df165368c71d6af229a74699622ce/wheel-0.43.0-py3-none-any.whl",
              "sha256": "55c570405f142630c6b9f72fe09d9b67cf1477fcf543ae5b8dcb1f5b7377da81",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__click": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__click",
              "url": "https://files.pythonhosted.org/packages/00/2e/d53fa4befbf2cfa713304affc7ca780ce4fc1fd8710527771b58311a3229/click-8.1.7-py3-none-any.whl",
              "sha256": "ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__importlib_metadata": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__importlib_metadata",
              "url": "https://files.pythonhosted.org/packages/2d/0a/679461c511447ffaf176567d5c496d1de27cbe34a87df6677d7171b2fbd4/importlib_metadata-7.1.0-py3-none-any.whl",
              "sha256": "30962b96c0c223483ed6cc7280e7f0199feb01a0e40cfae4d4450fc6fab1f570",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__pyproject_hooks": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__pyproject_hooks",
              "url": "https://files.pythonhosted.org/packages/ae/f3/431b9d5fe7d14af7a32340792ef43b8a714e7726f1d7b69cc4e8e7a3f1d7/pyproject_hooks-1.1.0-py3-none-any.whl",
              "sha256": "7ceeefe9aec63a1064c18d939bdc3adf2d8aa1988a510afec15151578b232aa2",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__pep517": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__pep517",
              "url": "https://files.pythonhosted.org/packages/25/6e/ca4a5434eb0e502210f591b97537d322546e4833dcb4d470a48c375c5540/pep517-0.13.1-py3-none-any.whl",
              "sha256": "31b206f67165b3536dd577c5c3f1518e8fbaf38cbc57efff8369a392feff1721",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__packaging": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__packaging",
              "url": "https://files.pythonhosted.org/packages/49/df/1fceb2f8900f8639e278b056416d49134fb8d84c5942ffaa01ad34782422/packaging-24.0-py3-none-any.whl",
              "sha256": "2ddfb553fdf02fb784c234c7ba6ccc288296ceabec964ad2eae3777778130bc5",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__pip_tools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__pip_tools",
              "url": "https://files.pythonhosted.org/packages/0d/dc/38f4ce065e92c66f058ea7a368a9c5de4e702272b479c0992059f7693941/pip_tools-7.4.1-py3-none-any.whl",
              "sha256": "4c690e5fbae2f21e87843e89c26191f0d9454f362d8acdbd695716493ec8b3a9",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__setuptools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__setuptools",
              "url": "https://files.pythonhosted.org/packages/de/88/70c5767a0e43eb4451c2200f07d042a4bcd7639276003a9c54a68cfcc1f8/setuptools-70.0.0-py3-none-any.whl",
              "sha256": "54faa7f2e8d2d11bcd2c07bed282eef1046b5c080d1c32add737d7b5817b1ad4",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__zipp": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__zipp",
              "url": "https://files.pythonhosted.org/packages/da/55/a03fd7240714916507e1fcf7ae355bd9d9ed2e6db492595f1a67f61681be/zipp-3.18.2-py3-none-any.whl",
              "sha256": "dce197b859eb796242b0622af1b8beb0a722d52aa2f57133ead08edd5bf5374e",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__colorama": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__colorama",
              "url": "https://files.pythonhosted.org/packages/d1/d6/3965ed04c63042e047cb6a3e6ed1a63a35087b6a609aa3a15ed8ac56c221/colorama-0.4.6-py2.py3-none-any.whl",
              "sha256": "4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__build": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__build",
              "url": "https://files.pythonhosted.org/packages/e2/03/f3c8ba0a6b6e30d7d18c40faab90807c9bb5e9a1e3b2fe2008af624a9c97/build-1.2.1-py3-none-any.whl",
              "sha256": "75e10f767a433d9a86e50d83f418e83efc18ede923ee5ff7df93b6cb0306c5d4",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "rules_python_internal": {
            "bzlFile": "@@rules_python~0.35.0//python/private:internal_config_repo.bzl",
            "ruleClassName": "internal_config_repo",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~rules_python_internal"
            }
          },
          "pypi__pip": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__pip",
              "url": "https://files.pythonhosted.org/packages/8a/6a/19e9fe04fca059ccf770861c7d5721ab4c2aebc539889e97c7977528a53b/pip-24.0-py3-none-any.whl",
              "sha256": "ba0d021a166865d2265246961bec0152ff124de910c5cc39f1156ce3fa7c69dc",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__installer": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__installer",
              "url": "https://files.pythonhosted.org/packages/e5/ca/1172b6638d52f2d6caa2dd262ec4c811ba59eee96d54a7701930726bce18/installer-0.7.0-py3-none-any.whl",
              "sha256": "05d1933f0a5ba7d8d6296bb6d5018e7c94fa473ceb10cf198a92ccea19c27b53",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__more_itertools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__more_itertools",
              "url": "https://files.pythonhosted.org/packages/50/e2/8e10e465ee3987bb7c9ab69efb91d867d93959095f4807db102d07995d94/more_itertools-10.2.0-py3-none-any.whl",
              "sha256": "686b06abe565edfab151cb8fd385a05651e1fdf8f0a14191e4439283421f8684",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__tomli": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.35.0~internal_deps~pypi__tomli",
              "url": "https://files.pythonhosted.org/packages/97/75/10a9ebee3fd790d20926a90a2547f0bf78f371b2f13aa822c759680ca7b9/tomli-2.0.1-py3-none-any.whl",
              "sha256": "939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude to avoid non-determinism.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          }
        },
        "moduleExtensionMetadata": {
          "useAllRepos": "DEV"
        },
        "recordedRepoMappingEntries": [
          [
            "rules_python~0.35.0",
            "bazel_skylib",
            "bazel_skylib~1.7.1"
          ],
          [
            "rules_python~0.35.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_rust~0.45.1//rust:extensions.bzl%rust": {
      "general": {
        "bzlTransitiveDigest": "9ExE/jjkst4Itn9kpJ/KeJHdnbgBXRNUbE5DoE/Cyx0=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-unknown-linux-gnu",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rustfmt_nightly-2024-05-02__aarch64-apple-darwin_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__aarch64-apple-darwin_tools",
              "version": "nightly",
              "iso_date": "2024-05-02",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": {},
              "exec_triple": "aarch64-apple-darwin"
            }
          },
          "rust_windows_x86_64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__wasm32-wasi__stable_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_aarch64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__wasm32-wasi__stable_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_x86_64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__wasm32-wasi__stable_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__aarch64-unknown-linux-gnu__stable_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-unknown-linux-gnu",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_windows_x86_64": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64",
              "toolchains": [
                "@rust_windows_x86_64__x86_64-pc-windows-msvc__stable//:toolchain",
                "@rust_windows_x86_64__x86_64-pc-windows-msvc__nightly//:toolchain",
                "@rust_windows_x86_64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_windows_x86_64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_windows_x86_64__wasm32-wasi__stable//:toolchain",
                "@rust_windows_x86_64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rustfmt_nightly-2024-05-02__x86_64-apple-darwin": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__x86_64-apple-darwin",
              "toolchain": "@rustfmt_nightly-2024-05-02__x86_64-apple-darwin_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": []
            }
          },
          "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__aarch64-pc-windows-msvc__nightly",
              "toolchain": "@rust_windows_aarch64__aarch64-pc-windows-msvc__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__wasm32-wasi__stable_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_windows_aarch64__aarch64-pc-windows-msvc__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__aarch64-pc-windows-msvc__stable_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-pc-windows-msvc",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_windows_aarch64": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64",
              "toolchains": [
                "@rust_windows_aarch64__aarch64-pc-windows-msvc__stable//:toolchain",
                "@rust_windows_aarch64__aarch64-pc-windows-msvc__nightly//:toolchain",
                "@rust_windows_aarch64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_windows_aarch64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_windows_aarch64__wasm32-wasi__stable//:toolchain",
                "@rust_windows_aarch64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_linux_x86_64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_linux_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_x86_64__x86_64-pc-windows-msvc__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__x86_64-pc-windows-msvc__stable_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-pc-windows-msvc",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_x86_64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_linux_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc",
              "toolchain": "@rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": []
            }
          },
          "rust_windows_aarch64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__wasm32-wasi__nightly",
              "toolchain": "@rust_windows_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_aarch64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_darwin_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__wasm32-wasi__stable",
              "toolchain": "@rust_windows_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_linux_aarch64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__wasm32-wasi__nightly",
              "toolchain": "@rust_linux_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__x86_64-pc-windows-msvc__nightly_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-pc-windows-msvc",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu",
              "toolchain": "@rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": []
            }
          },
          "rust_windows_aarch64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__wasm32-wasi__stable",
              "toolchain": "@rust_windows_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_x86_64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_aarch64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__wasm32-wasi__stable",
              "toolchain": "@rust_linux_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_aarch64__aarch64-apple-darwin__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__aarch64-apple-darwin__nightly_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-apple-darwin",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_x86_64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_darwin_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__wasm32-wasi__nightly_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_x86_64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__wasm32-wasi__nightly_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_freebsd_x86_64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__wasm32-wasi__stable_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_freebsd_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_freebsd_x86_64": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64",
              "toolchains": [
                "@rust_freebsd_x86_64__x86_64-unknown-freebsd__stable//:toolchain",
                "@rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly//:toolchain",
                "@rust_freebsd_x86_64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_freebsd_x86_64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_freebsd_x86_64__wasm32-wasi__stable//:toolchain",
                "@rust_freebsd_x86_64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_windows_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_darwin_x86_64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__x86_64-unknown-linux-gnu__stable",
              "toolchain": "@rust_linux_x86_64__x86_64-unknown-linux-gnu__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__wasm32-wasi__nightly_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__x86_64-pc-windows-msvc__stable",
              "toolchain": "@rust_windows_x86_64__x86_64-pc-windows-msvc__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ]
            }
          },
          "rust_linux_x86_64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__wasm32-wasi__stable",
              "toolchain": "@rust_linux_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_aarch64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__wasm32-wasi__nightly",
              "toolchain": "@rust_darwin_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_x86_64__x86_64-apple-darwin__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__x86_64-apple-darwin__nightly_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-apple-darwin",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_aarch64__aarch64-apple-darwin__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__aarch64-apple-darwin__stable_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-apple-darwin",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_aarch64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__wasm32-wasi__stable_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd",
              "toolchain": "@rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": []
            }
          },
          "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-unknown-linux-gnu",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_x86_64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__wasm32-wasi__nightly",
              "toolchain": "@rust_linux_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_windows_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_linux_aarch64": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64",
              "toolchains": [
                "@rust_linux_aarch64__aarch64-unknown-linux-gnu__stable//:toolchain",
                "@rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly//:toolchain",
                "@rust_linux_aarch64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_linux_aarch64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_linux_aarch64__wasm32-wasi__stable//:toolchain",
                "@rust_linux_aarch64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_freebsd_x86_64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__wasm32-wasi__nightly",
              "toolchain": "@rust_freebsd_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_x86_64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__wasm32-wasi__nightly",
              "toolchain": "@rust_darwin_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-unknown-freebsd",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_x86_64__x86_64-apple-darwin__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__x86_64-apple-darwin__nightly",
              "toolchain": "@rust_darwin_x86_64__x86_64-apple-darwin__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ]
            }
          },
          "rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu_tools",
              "version": "nightly",
              "iso_date": "2024-05-02",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": {},
              "exec_triple": "aarch64-unknown-linux-gnu"
            }
          },
          "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__aarch64-pc-windows-msvc__stable",
              "toolchain": "@rust_windows_aarch64__aarch64-pc-windows-msvc__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ]
            }
          },
          "rustfmt_nightly-2024-05-02__aarch64-apple-darwin": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__aarch64-apple-darwin",
              "toolchain": "@rustfmt_nightly-2024-05-02__aarch64-apple-darwin_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": []
            }
          },
          "rust_darwin_aarch64__aarch64-apple-darwin__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__aarch64-apple-darwin__nightly",
              "toolchain": "@rust_darwin_aarch64__aarch64-apple-darwin__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ]
            }
          },
          "rust_linux_aarch64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_toolchains": {
            "bzlFile": "@@rules_rust~0.45.1//rust/private:repository_utils.bzl",
            "ruleClassName": "toolchain_repository_hub",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_toolchains",
              "toolchain_names": [
                "rust_analyzer_1.78.0",
                "rust_darwin_aarch64__aarch64-apple-darwin__stable",
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly",
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable",
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly",
                "rust_darwin_aarch64__wasm32-wasi__stable",
                "rust_darwin_aarch64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-05-02__aarch64-apple-darwin",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly",
                "rust_windows_aarch64__wasm32-unknown-unknown__stable",
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly",
                "rust_windows_aarch64__wasm32-wasi__stable",
                "rust_windows_aarch64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly",
                "rust_linux_aarch64__wasm32-unknown-unknown__stable",
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly",
                "rust_linux_aarch64__wasm32-wasi__stable",
                "rust_linux_aarch64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu",
                "rust_darwin_x86_64__x86_64-apple-darwin__stable",
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly",
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable",
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly",
                "rust_darwin_x86_64__wasm32-wasi__stable",
                "rust_darwin_x86_64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-05-02__x86_64-apple-darwin",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly",
                "rust_windows_x86_64__wasm32-unknown-unknown__stable",
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly",
                "rust_windows_x86_64__wasm32-wasi__stable",
                "rust_windows_x86_64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly",
                "rust_freebsd_x86_64__wasm32-wasi__stable",
                "rust_freebsd_x86_64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly",
                "rust_linux_x86_64__wasm32-unknown-unknown__stable",
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly",
                "rust_linux_x86_64__wasm32-wasi__stable",
                "rust_linux_x86_64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu"
              ],
              "toolchain_labels": {
                "rust_analyzer_1.78.0": "@rust_analyzer_1.78.0_tools//:rust_analyzer_toolchain",
                "rust_darwin_aarch64__aarch64-apple-darwin__stable": "@rust_darwin_aarch64__aarch64-apple-darwin__stable_tools//:rust_toolchain",
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly": "@rust_darwin_aarch64__aarch64-apple-darwin__nightly_tools//:rust_toolchain",
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable": "@rust_darwin_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": "@rust_darwin_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_darwin_aarch64__wasm32-wasi__stable": "@rust_darwin_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_darwin_aarch64__wasm32-wasi__nightly": "@rust_darwin_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-05-02__aarch64-apple-darwin": "@rustfmt_nightly-2024-05-02__aarch64-apple-darwin_tools//:rustfmt_toolchain",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": "@rust_windows_aarch64__aarch64-pc-windows-msvc__stable_tools//:rust_toolchain",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": "@rust_windows_aarch64__aarch64-pc-windows-msvc__nightly_tools//:rust_toolchain",
                "rust_windows_aarch64__wasm32-unknown-unknown__stable": "@rust_windows_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly": "@rust_windows_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_windows_aarch64__wasm32-wasi__stable": "@rust_windows_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_windows_aarch64__wasm32-wasi__nightly": "@rust_windows_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc": "@rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc_tools//:rustfmt_toolchain",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": "@rust_linux_aarch64__aarch64-unknown-linux-gnu__stable_tools//:rust_toolchain",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": "@rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly_tools//:rust_toolchain",
                "rust_linux_aarch64__wasm32-unknown-unknown__stable": "@rust_linux_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly": "@rust_linux_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_linux_aarch64__wasm32-wasi__stable": "@rust_linux_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_linux_aarch64__wasm32-wasi__nightly": "@rust_linux_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu": "@rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu_tools//:rustfmt_toolchain",
                "rust_darwin_x86_64__x86_64-apple-darwin__stable": "@rust_darwin_x86_64__x86_64-apple-darwin__stable_tools//:rust_toolchain",
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly": "@rust_darwin_x86_64__x86_64-apple-darwin__nightly_tools//:rust_toolchain",
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable": "@rust_darwin_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": "@rust_darwin_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_darwin_x86_64__wasm32-wasi__stable": "@rust_darwin_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_darwin_x86_64__wasm32-wasi__nightly": "@rust_darwin_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-05-02__x86_64-apple-darwin": "@rustfmt_nightly-2024-05-02__x86_64-apple-darwin_tools//:rustfmt_toolchain",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": "@rust_windows_x86_64__x86_64-pc-windows-msvc__stable_tools//:rust_toolchain",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": "@rust_windows_x86_64__x86_64-pc-windows-msvc__nightly_tools//:rust_toolchain",
                "rust_windows_x86_64__wasm32-unknown-unknown__stable": "@rust_windows_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly": "@rust_windows_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_windows_x86_64__wasm32-wasi__stable": "@rust_windows_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_windows_x86_64__wasm32-wasi__nightly": "@rust_windows_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc": "@rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc_tools//:rustfmt_toolchain",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": "@rust_freebsd_x86_64__x86_64-unknown-freebsd__stable_tools//:rust_toolchain",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": "@rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly_tools//:rust_toolchain",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": "@rust_freebsd_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": "@rust_freebsd_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_freebsd_x86_64__wasm32-wasi__stable": "@rust_freebsd_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_freebsd_x86_64__wasm32-wasi__nightly": "@rust_freebsd_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd": "@rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd_tools//:rustfmt_toolchain",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": "@rust_linux_x86_64__x86_64-unknown-linux-gnu__stable_tools//:rust_toolchain",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": "@rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly_tools//:rust_toolchain",
                "rust_linux_x86_64__wasm32-unknown-unknown__stable": "@rust_linux_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly": "@rust_linux_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_linux_x86_64__wasm32-wasi__stable": "@rust_linux_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_linux_x86_64__wasm32-wasi__nightly": "@rust_linux_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu": "@rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu_tools//:rustfmt_toolchain"
              },
              "toolchain_types": {
                "rust_analyzer_1.78.0": "@rules_rust//rust/rust_analyzer:toolchain_type",
                "rust_darwin_aarch64__aarch64-apple-darwin__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-05-02__aarch64-apple-darwin": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_darwin_x86_64__x86_64-apple-darwin__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-05-02__x86_64-apple-darwin": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu": "@rules_rust//rust/rustfmt:toolchain_type"
              },
              "exec_compatible_with": {
                "rust_analyzer_1.78.0": [],
                "rust_darwin_aarch64__aarch64-apple-darwin__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rustfmt_nightly-2024-05-02__aarch64-apple-darwin": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_darwin_x86_64__x86_64-apple-darwin__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rustfmt_nightly-2024-05-02__x86_64-apple-darwin": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ]
              },
              "target_compatible_with": {
                "rust_analyzer_1.78.0": [],
                "rust_darwin_aarch64__aarch64-apple-darwin__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_darwin_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_darwin_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-05-02__aarch64-apple-darwin": [],
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_windows_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_windows_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc": [],
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_linux_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_linux_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-05-02__aarch64-unknown-linux-gnu": [],
                "rust_darwin_x86_64__x86_64-apple-darwin__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_darwin_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_darwin_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-05-02__x86_64-apple-darwin": [],
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_windows_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_windows_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc": [],
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_freebsd_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_freebsd_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd": [],
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_linux_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_linux_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu": []
              }
            }
          },
          "rust_linux_aarch64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_x86_64__x86_64-apple-darwin__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__x86_64-apple-darwin__stable_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-apple-darwin",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_darwin_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_freebsd_x86_64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_freebsd_x86_64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__wasm32-wasi__stable",
              "toolchain": "@rust_freebsd_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_aarch64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__aarch64-unknown-linux-gnu__stable",
              "toolchain": "@rust_linux_aarch64__aarch64-unknown-linux-gnu__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ]
            }
          },
          "rust_linux_aarch64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_linux_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__aarch64-pc-windows-msvc_tools",
              "version": "nightly",
              "iso_date": "2024-05-02",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": {},
              "exec_triple": "aarch64-pc-windows-msvc"
            }
          },
          "rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc",
              "toolchain": "@rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": []
            }
          },
          "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__x86_64-unknown-linux-gnu__stable_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-unknown-linux-gnu",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_analyzer_1.78.0_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_analyzer_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_analyzer_1.78.0_tools",
              "version": "1.78.0",
              "iso_date": "",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_aarch64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__wasm32-wasi__nightly_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_freebsd_x86_64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__wasm32-wasi__nightly_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__x86_64-pc-windows-msvc__nightly",
              "toolchain": "@rust_windows_x86_64__x86_64-pc-windows-msvc__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ]
            }
          },
          "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__x86_64-unknown-freebsd__stable_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-unknown-freebsd",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_x86_64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_darwin_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_darwin_aarch64__aarch64-apple-darwin__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__aarch64-apple-darwin__stable",
              "toolchain": "@rust_darwin_aarch64__aarch64-apple-darwin__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_x86_64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__wasm32-wasi__nightly_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_x86_64": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64",
              "toolchains": [
                "@rust_darwin_x86_64__x86_64-apple-darwin__stable//:toolchain",
                "@rust_darwin_x86_64__x86_64-apple-darwin__nightly//:toolchain",
                "@rust_darwin_x86_64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_darwin_x86_64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_darwin_x86_64__wasm32-wasi__stable//:toolchain",
                "@rust_darwin_x86_64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_aarch64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_windows_x86_64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_darwin_aarch64": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64",
              "toolchains": [
                "@rust_darwin_aarch64__aarch64-apple-darwin__stable//:toolchain",
                "@rust_darwin_aarch64__aarch64-apple-darwin__nightly//:toolchain",
                "@rust_darwin_aarch64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_darwin_aarch64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_darwin_aarch64__wasm32-wasi__stable//:toolchain",
                "@rust_darwin_aarch64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_darwin_x86_64__x86_64-apple-darwin__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__x86_64-apple-darwin__stable",
              "toolchain": "@rust_darwin_x86_64__x86_64-apple-darwin__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ]
            }
          },
          "rust_darwin_x86_64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_x86_64__wasm32-wasi__stable",
              "toolchain": "@rust_darwin_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu",
              "toolchain": "@rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": []
            }
          },
          "rust_linux_x86_64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__wasm32-wasi__stable_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_x86_64": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64",
              "toolchains": [
                "@rust_linux_x86_64__x86_64-unknown-linux-gnu__stable//:toolchain",
                "@rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly//:toolchain",
                "@rust_linux_x86_64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_linux_x86_64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_linux_x86_64__wasm32-wasi__stable//:toolchain",
                "@rust_linux_x86_64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.78.0",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rust_linux_aarch64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_linux_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__x86_64-pc-windows-msvc_tools",
              "version": "nightly",
              "iso_date": "2024-05-02",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": {},
              "exec_triple": "x86_64-pc-windows-msvc"
            }
          },
          "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly",
              "toolchain": "@rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_windows_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__x86_64-unknown-linux-gnu_tools",
              "version": "nightly",
              "iso_date": "2024-05-02",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": {},
              "exec_triple": "x86_64-unknown-linux-gnu"
            }
          },
          "rust_windows_x86_64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_windows_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_x86_64__wasm32-wasi__nightly",
              "toolchain": "@rust_windows_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly",
              "toolchain": "@rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ]
            }
          },
          "rust_darwin_aarch64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__wasm32-wasi__stable",
              "toolchain": "@rust_darwin_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_freebsd_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_windows_aarch64__aarch64-pc-windows-msvc__nightly_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-pc-windows-msvc",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rustfmt_nightly-2024-05-02__x86_64-apple-darwin_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__x86_64-apple-darwin_tools",
              "version": "nightly",
              "iso_date": "2024-05-02",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": {},
              "exec_triple": "x86_64-apple-darwin"
            }
          },
          "rust_darwin_aarch64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_darwin_aarch64__wasm32-wasi__nightly_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          },
          "rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rustfmt_nightly-2024-05-02__x86_64-unknown-freebsd_tools",
              "version": "nightly",
              "iso_date": "2024-05-02",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": {},
              "exec_triple": "x86_64-unknown-freebsd"
            }
          },
          "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__x86_64-unknown-freebsd__stable",
              "toolchain": "@rust_freebsd_x86_64__x86_64-unknown-freebsd__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ]
            }
          },
          "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly",
              "toolchain": "@rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ]
            }
          },
          "rust_analyzer_1.78.0": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_analyzer_1.78.0",
              "toolchain": "@rust_analyzer_1.78.0_tools//:rust_analyzer_toolchain",
              "toolchain_type": "@rules_rust//rust/rust_analyzer:toolchain_type",
              "exec_compatible_with": [],
              "target_compatible_with": []
            }
          },
          "rust_linux_x86_64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.45.1//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.45.1~rust~rust_linux_x86_64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-05-02",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-05-02",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "netrc": "",
              "auth_patterns": []
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~1.11.0",
            "bazel_features_globals",
            "bazel_features~1.11.0~version_extension~bazel_features_globals"
          ],
          [
            "bazel_features~1.11.0",
            "bazel_features_version",
            "bazel_features~1.11.0~version_extension~bazel_features_version"
          ],
          [
            "rules_rust~0.45.1",
            "bazel_features",
            "bazel_features~1.11.0"
          ],
          [
            "rules_rust~0.45.1",
            "bazel_skylib",
            "bazel_skylib~1.7.1"
          ],
          [
            "rules_rust~0.45.1",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_rust~0.45.1",
            "rules_rust",
            "rules_rust~0.45.1"
          ]
        ]
      }
    }
  }
}
